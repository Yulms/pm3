"use strict";const RIPPLE_CLASSNAME="ripple",RIPPLE_BEFORE_MOD_CLASSNAME="ripple--before",RIPPLE_AFTER_MOD_CLASSNAME="ripple--after";class Ripple{constructor(t){Object.assign(this,{selectors:["button"],activationEventTypes:["mousedown","keydown"],startScale:.6,padding:10,opacity:.12,lastAnimationName:"ripple-opacity-out"},t),this.rippleActiveModClassName="ripple--after",this.activationEventTypes.forEach(t=>{document.addEventListener(t,t=>{switch(t.type){case"mousedown":1===t.which&&this._activateHandler(t);break;case"keydown":"Enter"===t.key&&(t.ripplePositionInCenter=!0,this._activateHandler(t));break;default:this._activateHandler(t)}})})}_activateHandler(t){this.selectors.some(e=>{let i=t.target.closest(e);if(!i)return!1;i.classList.contains("ripple")&&this._endExecution(i);let n=getComputedStyle(i,"::after");if("none"!==n.content){if(n=getComputedStyle(i,"::before"),"none"!==n.content)return!1;this.rippleActiveModClassName="ripple--before"}n=getComputedStyle(i);let s=n.position;"absolute"!==s&&"fixed"!==s||(i.style.position=s);let a=this._getSize(i),o=this._getTranslationCoordinates(t,i,a),r=this._getScale(i,a);return i.style.setProperty("--size",a+"px"),i.style.setProperty("--startTranslate",`${o.startPointX}px,\n         ${o.startPointY}px`),i.style.setProperty("--endTranslate",`${o.endPointX}px,\n         ${o.endPointY}px`),i.style.setProperty("--endScale",r),i.style.setProperty("--opacity",this.opacity),i.classList.add("ripple"),i.classList.add(this.rippleActiveModClassName),i.addEventListener("animationend",t=>{t.animationName===this.lastAnimationName&&this._endExecution(i)}),!0})}_endExecution(t){t.classList.remove("ripple"),t.classList.remove(this.rippleActiveModClassName)}_getSize(t){return Math.floor(this.startScale*Math.max(t.clientWidth,t.clientHeight))}_getTranslationCoordinates(t,e,i){let n,s,a={},o=e.getBoundingClientRect();return t.ripplePositionInCenter?(n=o.width/2-i/2,s=o.height/2-i/2):(n=t.clientX-o.x-i/2,s=t.clientY-o.y-i/2),a={startPointX:n,startPointY:s,endPointX:o.width/2-i/2,endPointY:o.height/2-i/2},a}_getScale(t,e){return(Math.sqrt(Math.pow(t.clientWidth,2)+Math.pow(t.clientHeight,2))+this.padding)/e}}function initRipple(){return new Ripple({selectors:["a[href]","button:not(.button--modal-close)",".chip-set__box",".radio-tabs__label"]})}export default initRipple;