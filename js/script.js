/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./source/js/custom-focus-events.js":
/*!******************************************!*\
  !*** ./source/js/custom-focus-events.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n // События focusEnter и focusLeave - аналоги mouseEnter и mouseLeave\n\nfunction appendCustomFocusEvents(containerElement) {\n  let focusInside = false;\n\n  function _onContainerFocusIn() {\n    if (!focusInside) {\n      containerElement.dispatchEvent(new CustomEvent('focusEnter'));\n      focusInside = true;\n    }\n  }\n\n  function _onContainerFocusOut(evt) {\n    if (!containerElement.contains(evt.relatedTarget)) {\n      containerElement.dispatchEvent(new CustomEvent('focusLeave', {\n        // bubbles: true,\n        detail: {\n          relatedTarget: evt.relatedTarget\n        }\n      }));\n      focusInside = false;\n    }\n  } // в старой версии использовалось отложенный focusout\n  // function _onContainerFocusOut() {\n  //   if (!containerElement.contains(document.activeElement)) {\n  //     containerElement.dispatchEvent(new CustomEvent('focusLeave', {bubbles: true}));\n  //     focusInside = false;\n  //   }\n  // }\n\n\n  if (!containerElement.customFocusEventsIsAdded) {\n    containerElement.addEventListener('focusin', _onContainerFocusIn);\n    containerElement.addEventListener('focusout', _onContainerFocusOut);\n    containerElement.customFocusEventsIsAdded = true; // containerElement.addEventListener('focusout', (evt) => {\n    //   setTimeout(_onContainerFocusOut, 0);\n    // });\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (appendCustomFocusEvents);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2UvanMvY3VzdG9tLWZvY3VzLWV2ZW50cy5qcz8zZTdlIl0sIm5hbWVzIjpbImFwcGVuZEN1c3RvbUZvY3VzRXZlbnRzIiwiY29udGFpbmVyRWxlbWVudCIsImZvY3VzSW5zaWRlIiwiX29uQ29udGFpbmVyRm9jdXNJbiIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21FdmVudCIsIl9vbkNvbnRhaW5lckZvY3VzT3V0IiwiZXZ0IiwiY29udGFpbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZGV0YWlsIiwiY3VzdG9tRm9jdXNFdmVudHNJc0FkZGVkIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6IkFBQUE7Q0FFQTs7QUFHQSxTQUFTQSx1QkFBVCxDQUFpQ0MsZ0JBQWpDLEVBQW1EO0FBRWpELE1BQUlDLFdBQVcsR0FBRyxLQUFsQjs7QUFFQSxXQUFTQyxtQkFBVCxHQUErQjtBQUM3QixRQUFJLENBQUNELFdBQUwsRUFBa0I7QUFDaEJELHNCQUFnQixDQUFDRyxhQUFqQixDQUErQixJQUFJQyxXQUFKLENBQWdCLFlBQWhCLENBQS9CO0FBQ0FILGlCQUFXLEdBQUcsSUFBZDtBQUNEO0FBQ0Y7O0FBRUQsV0FBU0ksb0JBQVQsQ0FBOEJDLEdBQTlCLEVBQW1DO0FBQ2pDLFFBQUksQ0FBQ04sZ0JBQWdCLENBQUNPLFFBQWpCLENBQTBCRCxHQUFHLENBQUNFLGFBQTlCLENBQUwsRUFBbUQ7QUFDakRSLHNCQUFnQixDQUFDRyxhQUFqQixDQUErQixJQUFJQyxXQUFKLENBQWdCLFlBQWhCLEVBQThCO0FBQzNEO0FBQ0FLLGNBQU0sRUFBRTtBQUNORCx1QkFBYSxFQUFFRixHQUFHLENBQUNFO0FBRGI7QUFGbUQsT0FBOUIsQ0FBL0I7QUFNQVAsaUJBQVcsR0FBRyxLQUFkO0FBQ0Q7QUFDRixHQXJCZ0QsQ0F1QmpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQSxNQUFJLENBQUNELGdCQUFnQixDQUFDVSx3QkFBdEIsRUFBZ0Q7QUFDOUNWLG9CQUFnQixDQUFDVyxnQkFBakIsQ0FBa0MsU0FBbEMsRUFBNkNULG1CQUE3QztBQUNBRixvQkFBZ0IsQ0FBQ1csZ0JBQWpCLENBQWtDLFVBQWxDLEVBQThDTixvQkFBOUM7QUFDQUwsb0JBQWdCLENBQUNVLHdCQUFqQixHQUE0QyxJQUE1QyxDQUg4QyxDQUk5QztBQUNBO0FBQ0E7QUFDRDtBQUNGOztBQUdjWCxzRkFBZiIsImZpbGUiOiIuL3NvdXJjZS9qcy9jdXN0b20tZm9jdXMtZXZlbnRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyDQodC+0LHRi9GC0LjRjyBmb2N1c0VudGVyINC4IGZvY3VzTGVhdmUgLSDQsNC90LDQu9C+0LPQuCBtb3VzZUVudGVyINC4IG1vdXNlTGVhdmVcblxuXG5mdW5jdGlvbiBhcHBlbmRDdXN0b21Gb2N1c0V2ZW50cyhjb250YWluZXJFbGVtZW50KSB7XG5cbiAgbGV0IGZvY3VzSW5zaWRlID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gX29uQ29udGFpbmVyRm9jdXNJbigpIHtcbiAgICBpZiAoIWZvY3VzSW5zaWRlKSB7XG4gICAgICBjb250YWluZXJFbGVtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdmb2N1c0VudGVyJykpO1xuICAgICAgZm9jdXNJbnNpZGUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9vbkNvbnRhaW5lckZvY3VzT3V0KGV2dCkge1xuICAgIGlmICghY29udGFpbmVyRWxlbWVudC5jb250YWlucyhldnQucmVsYXRlZFRhcmdldCkpIHtcbiAgICAgIGNvbnRhaW5lckVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ2ZvY3VzTGVhdmUnLCB7XG4gICAgICAgIC8vIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgIGRldGFpbDoge1xuICAgICAgICAgIHJlbGF0ZWRUYXJnZXQ6IGV2dC5yZWxhdGVkVGFyZ2V0XG4gICAgICAgIH1cbiAgICAgIH0pKTtcbiAgICAgIGZvY3VzSW5zaWRlID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLy8g0LIg0YHRgtCw0YDQvtC5INCy0LXRgNGB0LjQuCDQuNGB0L/QvtC70YzQt9C+0LLQsNC70L7RgdGMINC+0YLQu9C+0LbQtdC90L3Ri9C5IGZvY3Vzb3V0XG4gIC8vIGZ1bmN0aW9uIF9vbkNvbnRhaW5lckZvY3VzT3V0KCkge1xuICAvLyAgIGlmICghY29udGFpbmVyRWxlbWVudC5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSkge1xuICAvLyAgICAgY29udGFpbmVyRWxlbWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnZm9jdXNMZWF2ZScsIHtidWJibGVzOiB0cnVlfSkpO1xuICAvLyAgICAgZm9jdXNJbnNpZGUgPSBmYWxzZTtcbiAgLy8gICB9XG4gIC8vIH1cblxuICBpZiAoIWNvbnRhaW5lckVsZW1lbnQuY3VzdG9tRm9jdXNFdmVudHNJc0FkZGVkKSB7XG4gICAgY29udGFpbmVyRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdmb2N1c2luJywgX29uQ29udGFpbmVyRm9jdXNJbik7XG4gICAgY29udGFpbmVyRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdmb2N1c291dCcsIF9vbkNvbnRhaW5lckZvY3VzT3V0KTtcbiAgICBjb250YWluZXJFbGVtZW50LmN1c3RvbUZvY3VzRXZlbnRzSXNBZGRlZCA9IHRydWU7XG4gICAgLy8gY29udGFpbmVyRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdmb2N1c291dCcsIChldnQpID0+IHtcbiAgICAvLyAgIHNldFRpbWVvdXQoX29uQ29udGFpbmVyRm9jdXNPdXQsIDApO1xuICAgIC8vIH0pO1xuICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgYXBwZW5kQ3VzdG9tRm9jdXNFdmVudHM7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/js/custom-focus-events.js\n");

/***/ }),

/***/ "./source/js/index.js":
/*!****************************!*\
  !*** ./source/js/index.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lazyload_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lazyload.js */ \"./source/js/lazyload.js\");\n/* harmony import */ var _scrollonload_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scrollonload.js */ \"./source/js/scrollonload.js\");\n/* harmony import */ var _sass_blocks_switch_view_switch_view_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sass/blocks/switch-view/_switch-view.js */ \"./source/sass/blocks/switch-view/_switch-view.js\");\n/* harmony import */ var _sass_blocks_main_nav_main_nav_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sass/blocks/main-nav/_main-nav.js */ \"./source/sass/blocks/main-nav/_main-nav.js\");\n/* harmony import */ var _sass_blocks_modal_modal_bounded_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../sass/blocks/modal/_modal--bounded.js */ \"./source/sass/blocks/modal/_modal--bounded.js\");\n/* harmony import */ var _sass_blocks_modal_modal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../sass/blocks/modal/_modal.js */ \"./source/sass/blocks/modal/_modal.js\");\n/* harmony import */ var _sass_blocks_quantity_input_quantity_input_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../sass/blocks/quantity-input/_quantity-input.js */ \"./source/sass/blocks/quantity-input/_quantity-input.js\");\n/* harmony import */ var _sass_blocks_tooltip_tooltip_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../sass/blocks/tooltip/_tooltip.js */ \"./source/sass/blocks/tooltip/_tooltip.js\");\n/* harmony import */ var _sass_blocks_textfield_textfield_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../sass/blocks/textfield/_textfield.js */ \"./source/sass/blocks/textfield/_textfield.js\");\n/* harmony import */ var _sass_blocks_custom_select_custom_select_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../sass/blocks/custom-select/_custom-select.js */ \"./source/sass/blocks/custom-select/_custom-select.js\");\n/* harmony import */ var _sass_blocks_ripple_ripple_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../sass/blocks/ripple/_ripple.js */ \"./source/sass/blocks/ripple/_ripple.js\");\n/* harmony import */ var _sass_blocks_accordion_accordion_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../sass/blocks/accordion/_accordion.js */ \"./source/sass/blocks/accordion/_accordion.js\");\n/* harmony import */ var _sass_blocks_slider_slider_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../sass/blocks/slider/_slider.js */ \"./source/sass/blocks/slider/_slider.js\");\n/* harmony import */ var _sass_blocks_showmore_showmore_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../sass/blocks/showmore/_showmore.js */ \"./source/sass/blocks/showmore/_showmore.js\");\n/* harmony import */ var _sass_blocks_stars_stars_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../sass/blocks/stars/_stars.js */ \"./source/sass/blocks/stars/_stars.js\");\n/* harmony import */ var _sass_blocks_radiocheck_radio_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../sass/blocks/radiocheck/_radio.js */ \"./source/sass/blocks/radiocheck/_radio.js\");\n/* harmony import */ var _sass_blocks_pickup_pickup_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../sass/blocks/pickup/_pickup.js */ \"./source/sass/blocks/pickup/_pickup.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst projectObjects = {\n  // eslint-disable-line\n  lazyLoad: Object(_lazyload_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(),\n  scrollOnLoad: Object(_scrollonload_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n  switchView: Object(_sass_blocks_switch_view_switch_view_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(),\n  mainNav: Object(_sass_blocks_main_nav_main_nav_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n  modalsBounded: Object(_sass_blocks_modal_modal_bounded_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n  modal: Object(_sass_blocks_modal_modal_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(),\n  quantityInput: Object(_sass_blocks_quantity_input_quantity_input_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(),\n  toolTips: Object(_sass_blocks_tooltip_tooltip_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(),\n  textfields: Object(_sass_blocks_textfield_textfield_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(),\n  customSelects: Object(_sass_blocks_custom_select_custom_select_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(),\n  ripple: Object(_sass_blocks_ripple_ripple_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(),\n  accordion: Object(_sass_blocks_accordion_accordion_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(),\n  sliders: Object(_sass_blocks_slider_slider_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(),\n  showMores: Object(_sass_blocks_showmore_showmore_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(),\n  stars: Object(_sass_blocks_stars_stars_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(),\n  radios: Object(_sass_blocks_radiocheck_radio_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(),\n  pickup: Object(_sass_blocks_pickup_pickup_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"])()\n};\nconsole.log(projectObjects);\nwindow.projectObjects = projectObjects;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2UvanMvaW5kZXguanM/OGQyNSJdLCJuYW1lcyI6WyJwcm9qZWN0T2JqZWN0cyIsImxhenlMb2FkIiwiaW5pdExhenlsb2FkIiwic2Nyb2xsT25Mb2FkIiwiaW5pdFNjcm9sbE9uTG9hZCIsInN3aXRjaFZpZXciLCJpbml0U3dpdGNoVmlldyIsIm1haW5OYXYiLCJpbml0TWFpbk5hdiIsIm1vZGFsc0JvdW5kZWQiLCJpbml0Qm91bmRlZE1vZGFscyIsIm1vZGFsIiwiaW5pdE1vZGFsIiwicXVhbnRpdHlJbnB1dCIsImluaXRRdWFudGl0eUlucHV0IiwidG9vbFRpcHMiLCJpbml0VG9vbHRpcHMiLCJ0ZXh0ZmllbGRzIiwiaW5pdFRleHRmaWVsZHMiLCJjdXN0b21TZWxlY3RzIiwiaW5pdEN1c3RvbVNlbGVjdHMiLCJyaXBwbGUiLCJpbml0UmlwcGxlIiwiYWNjb3JkaW9uIiwiaW5pdEFjY29yZGlvbiIsInNsaWRlcnMiLCJpbml0U2xpZGVycyIsInNob3dNb3JlcyIsImluaXRTaG93bW9yZXMiLCJzdGFycyIsImluaXRTdGFycyIsInJhZGlvcyIsImluaXRSYWRpb3MiLCJwaWNrdXAiLCJpbml0UGlja3VwIiwiY29uc29sZSIsImxvZyIsIndpbmRvdyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLE1BQU1BLGNBQWMsR0FBRztBQUFFO0FBQ3ZCQyxVQUFRLEVBQUVDLDREQUFZLEVBREQ7QUFFckJDLGNBQVksRUFBRUMsZ0VBQWdCLEVBRlQ7QUFHckJDLFlBQVUsRUFBRUMsdUZBQWMsRUFITDtBQUlyQkMsU0FBTyxFQUFFQyxpRkFBVyxFQUpDO0FBS3JCQyxlQUFhLEVBQUVDLG1GQUFpQixFQUxYO0FBTXJCQyxPQUFLLEVBQUVDLDJFQUFTLEVBTks7QUFPckJDLGVBQWEsRUFBRUMsNkZBQWlCLEVBUFg7QUFRckJDLFVBQVEsRUFBRUMsK0VBQVksRUFSRDtBQVNyQkMsWUFBVSxFQUFFQyxtRkFBYyxFQVRMO0FBVXJCQyxlQUFhLEVBQUVDLDJGQUFpQixFQVZYO0FBV3JCQyxRQUFNLEVBQUVDLDhFQUFVLEVBWEc7QUFZckJDLFdBQVMsRUFBRUMsb0ZBQWEsRUFaSDtBQWFyQkMsU0FBTyxFQUFFQyw4RUFBVyxFQWJDO0FBY3JCQyxXQUFTLEVBQUVDLGtGQUFhLEVBZEg7QUFlckJDLE9BQUssRUFBRUMsNEVBQVMsRUFmSztBQWdCckJDLFFBQU0sRUFBRUMsaUZBQVUsRUFoQkc7QUFpQnJCQyxRQUFNLEVBQUVDLDhFQUFVO0FBakJHLENBQXZCO0FBb0JBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWXBDLGNBQVo7QUFFQXFDLE1BQU0sQ0FBQ3JDLGNBQVAsR0FBd0JBLGNBQXhCIiwiZmlsZSI6Ii4vc291cmNlL2pzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluaXRMYXp5bG9hZCBmcm9tICcuL2xhenlsb2FkLmpzJztcbmltcG9ydCBpbml0U2Nyb2xsT25Mb2FkIGZyb20gJy4vc2Nyb2xsb25sb2FkLmpzJztcbmltcG9ydCBpbml0U3dpdGNoVmlldyBmcm9tICcuLi9zYXNzL2Jsb2Nrcy9zd2l0Y2gtdmlldy9fc3dpdGNoLXZpZXcuanMnO1xuaW1wb3J0IGluaXRNYWluTmF2IGZyb20gJy4uL3Nhc3MvYmxvY2tzL21haW4tbmF2L19tYWluLW5hdi5qcyc7XG5pbXBvcnQgaW5pdEJvdW5kZWRNb2RhbHMgZnJvbSAnLi4vc2Fzcy9ibG9ja3MvbW9kYWwvX21vZGFsLS1ib3VuZGVkLmpzJztcbmltcG9ydCBpbml0TW9kYWwgZnJvbSAnLi4vc2Fzcy9ibG9ja3MvbW9kYWwvX21vZGFsLmpzJztcbmltcG9ydCBpbml0UXVhbnRpdHlJbnB1dCBmcm9tICcuLi9zYXNzL2Jsb2Nrcy9xdWFudGl0eS1pbnB1dC9fcXVhbnRpdHktaW5wdXQuanMnO1xuaW1wb3J0IGluaXRUb29sdGlwcyBmcm9tICcuLi9zYXNzL2Jsb2Nrcy90b29sdGlwL190b29sdGlwLmpzJztcbmltcG9ydCBpbml0VGV4dGZpZWxkcyBmcm9tICcuLi9zYXNzL2Jsb2Nrcy90ZXh0ZmllbGQvX3RleHRmaWVsZC5qcyc7XG5pbXBvcnQgaW5pdEN1c3RvbVNlbGVjdHMgZnJvbSAnLi4vc2Fzcy9ibG9ja3MvY3VzdG9tLXNlbGVjdC9fY3VzdG9tLXNlbGVjdC5qcyc7XG5pbXBvcnQgaW5pdFJpcHBsZSBmcm9tICcuLi9zYXNzL2Jsb2Nrcy9yaXBwbGUvX3JpcHBsZS5qcyc7XG5pbXBvcnQgaW5pdEFjY29yZGlvbiBmcm9tICcuLi9zYXNzL2Jsb2Nrcy9hY2NvcmRpb24vX2FjY29yZGlvbi5qcyc7XG5pbXBvcnQgaW5pdFNsaWRlcnMgZnJvbSAnLi4vc2Fzcy9ibG9ja3Mvc2xpZGVyL19zbGlkZXIuanMnO1xuaW1wb3J0IGluaXRTaG93bW9yZXMgZnJvbSAnLi4vc2Fzcy9ibG9ja3Mvc2hvd21vcmUvX3Nob3dtb3JlLmpzJztcbmltcG9ydCBpbml0U3RhcnMgZnJvbSAnLi4vc2Fzcy9ibG9ja3Mvc3RhcnMvX3N0YXJzLmpzJztcbmltcG9ydCBpbml0UmFkaW9zIGZyb20gJy4uL3Nhc3MvYmxvY2tzL3JhZGlvY2hlY2svX3JhZGlvLmpzJztcbmltcG9ydCBpbml0UGlja3VwIGZyb20gJy4uL3Nhc3MvYmxvY2tzL3BpY2t1cC9fcGlja3VwLmpzJztcblxuY29uc3QgcHJvamVjdE9iamVjdHMgPSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgbGF6eUxvYWQ6IGluaXRMYXp5bG9hZCgpLFxuICBzY3JvbGxPbkxvYWQ6IGluaXRTY3JvbGxPbkxvYWQoKSxcbiAgc3dpdGNoVmlldzogaW5pdFN3aXRjaFZpZXcoKSxcbiAgbWFpbk5hdjogaW5pdE1haW5OYXYoKSxcbiAgbW9kYWxzQm91bmRlZDogaW5pdEJvdW5kZWRNb2RhbHMoKSxcbiAgbW9kYWw6IGluaXRNb2RhbCgpLFxuICBxdWFudGl0eUlucHV0OiBpbml0UXVhbnRpdHlJbnB1dCgpLFxuICB0b29sVGlwczogaW5pdFRvb2x0aXBzKCksXG4gIHRleHRmaWVsZHM6IGluaXRUZXh0ZmllbGRzKCksXG4gIGN1c3RvbVNlbGVjdHM6IGluaXRDdXN0b21TZWxlY3RzKCksXG4gIHJpcHBsZTogaW5pdFJpcHBsZSgpLFxuICBhY2NvcmRpb246IGluaXRBY2NvcmRpb24oKSxcbiAgc2xpZGVyczogaW5pdFNsaWRlcnMoKSxcbiAgc2hvd01vcmVzOiBpbml0U2hvd21vcmVzKCksXG4gIHN0YXJzOiBpbml0U3RhcnMoKSxcbiAgcmFkaW9zOiBpbml0UmFkaW9zKCksXG4gIHBpY2t1cDogaW5pdFBpY2t1cCgpXG59O1xuXG5jb25zb2xlLmxvZyhwcm9qZWN0T2JqZWN0cyk7XG5cbndpbmRvdy5wcm9qZWN0T2JqZWN0cyA9IHByb2plY3RPYmplY3RzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/js/index.js\n");

/***/ }),

/***/ "./source/js/lazyload.js":
/*!*******************************!*\
  !*** ./source/js/lazyload.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n'use script'; // https://web.dev/browser-level-image-lazy-loading/\n\nfunction appendLazysizesScript() {\n  const script = document.createElement('script');\n  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.3.0/lazysizes.min.js';\n  document.head.append(script);\n}\n\nfunction initLazyload() {\n  let nativeLazyloadIsEnabled = false;\n\n  if ('loading' in HTMLImageElement.prototype) {\n    // Если поддержка есть - браузер покажет заглушку - dummy.svg\n    // надо заменить заглушку на реальные изображения\n    const dataSrcsetElements = document.querySelectorAll('[data-srcset]');\n    dataSrcsetElements.forEach(dataSrcsetElement => {\n      dataSrcsetElement.srcset = dataSrcsetElement.dataset.srcset;\n      delete dataSrcsetElement.dataset.srcset;\n    });\n    nativeLazyloadIsEnabled = true;\n  } else {\n    const lazyElements = document.querySelectorAll('[loading=\"lazy\"]');\n    lazyElements.forEach(lazyElement => {\n      lazyElement.classList.add('lazyload');\n    });\n    appendLazysizesScript();\n  }\n\n  return {\n    nativeLazyloadIsEnabled\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initLazyload); // function initLazyload() {\n//   let nativeLazyloadIsEnabled;\n//   if ('loading' in HTMLImageElement.prototype) {\n//     const srcsetElements = document.querySelectorAll('[data-srcset]');\n//     srcsetElements.forEach(srcsetElement => {\n//       srcsetElement.setAttribute('srcset', srcsetElement.dataset.srcset);\n//       delete srcsetElement.dataset.srcset;\n//     });\n//     const images = document.querySelectorAll('[data-src]');\n//     images.forEach((img) => {\n//       img.src = img.dataset.src;\n//       delete img.dataset.src;\n//     });\n//     nativeLazyloadIsEnabled = true;\n//   } else {\n//     const lazyImages = document.querySelectorAll('[loading = \"lazy\"]');\n//     lazyImages.forEach(lazyImage => {\n//       lazyImage.classList.add('lazyload');\n//     });\n//     const script = document.createElement('script');\n//     script.src = 'https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.3.0/lazysizes.min.js';\n//     document.head.append(script);\n//     nativeLazyloadIsEnabled = false;\n//   }\n//   return { nativeLazyloadIsEnabled };\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2UvanMvbGF6eWxvYWQuanM/MDJhOSJdLCJuYW1lcyI6WyJhcHBlbmRMYXp5c2l6ZXNTY3JpcHQiLCJzY3JpcHQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJoZWFkIiwiYXBwZW5kIiwiaW5pdExhenlsb2FkIiwibmF0aXZlTGF6eWxvYWRJc0VuYWJsZWQiLCJIVE1MSW1hZ2VFbGVtZW50IiwicHJvdG90eXBlIiwiZGF0YVNyY3NldEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJkYXRhU3Jjc2V0RWxlbWVudCIsInNyY3NldCIsImRhdGFzZXQiLCJsYXp5RWxlbWVudHMiLCJsYXp5RWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxhLENBRUE7O0FBR0EsU0FBU0EscUJBQVQsR0FBaUM7QUFDL0IsUUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBZjtBQUNBRixRQUFNLENBQUNHLEdBQVAsR0FBYSx5RUFBYjtBQUNBRixVQUFRLENBQUNHLElBQVQsQ0FBY0MsTUFBZCxDQUFxQkwsTUFBckI7QUFDRDs7QUFHRCxTQUFTTSxZQUFULEdBQXdCO0FBQ3RCLE1BQUlDLHVCQUF1QixHQUFHLEtBQTlCOztBQUVBLE1BQUksYUFBYUMsZ0JBQWdCLENBQUNDLFNBQWxDLEVBQTZDO0FBQzNDO0FBQ0E7QUFDQSxVQUFNQyxrQkFBa0IsR0FBR1QsUUFBUSxDQUFDVSxnQkFBVCxDQUEwQixlQUExQixDQUEzQjtBQUNBRCxzQkFBa0IsQ0FBQ0UsT0FBbkIsQ0FBNEJDLGlCQUFELElBQXVCO0FBQ2hEQSx1QkFBaUIsQ0FBQ0MsTUFBbEIsR0FBMkJELGlCQUFpQixDQUFDRSxPQUFsQixDQUEwQkQsTUFBckQ7QUFDQSxhQUFPRCxpQkFBaUIsQ0FBQ0UsT0FBbEIsQ0FBMEJELE1BQWpDO0FBQ0QsS0FIRDtBQUlBUCwyQkFBdUIsR0FBRyxJQUExQjtBQUNELEdBVEQsTUFTTztBQUNMLFVBQU1TLFlBQVksR0FBR2YsUUFBUSxDQUFDVSxnQkFBVCxDQUEwQixrQkFBMUIsQ0FBckI7QUFDQUssZ0JBQVksQ0FBQ0osT0FBYixDQUFzQkssV0FBRCxJQUFpQjtBQUNwQ0EsaUJBQVcsQ0FBQ0MsU0FBWixDQUFzQkMsR0FBdEIsQ0FBMEIsVUFBMUI7QUFDRCxLQUZEO0FBR0FwQix5QkFBcUI7QUFDdEI7O0FBRUQsU0FBTztBQUFFUTtBQUFGLEdBQVA7QUFDRDs7QUFHY0QsMkVBQWYsRSxDQUdBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUVBO0FBQ0EiLCJmaWxlIjoiLi9zb3VyY2UvanMvbGF6eWxvYWQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNjcmlwdCc7XG5cbi8vIGh0dHBzOi8vd2ViLmRldi9icm93c2VyLWxldmVsLWltYWdlLWxhenktbG9hZGluZy9cblxuXG5mdW5jdGlvbiBhcHBlbmRMYXp5c2l6ZXNTY3JpcHQoKSB7XG4gIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICBzY3JpcHQuc3JjID0gJ2h0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2xhenlzaXplcy81LjMuMC9sYXp5c2l6ZXMubWluLmpzJztcbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmQoc2NyaXB0KTtcbn1cblxuXG5mdW5jdGlvbiBpbml0TGF6eWxvYWQoKSB7XG4gIGxldCBuYXRpdmVMYXp5bG9hZElzRW5hYmxlZCA9IGZhbHNlO1xuXG4gIGlmICgnbG9hZGluZycgaW4gSFRNTEltYWdlRWxlbWVudC5wcm90b3R5cGUpIHtcbiAgICAvLyDQldGB0LvQuCDQv9C+0LTQtNC10YDQttC60LAg0LXRgdGC0YwgLSDQsdGA0LDRg9C30LXRgCDQv9C+0LrQsNC20LXRgiDQt9Cw0LPQu9GD0YjQutGDIC0gZHVtbXkuc3ZnXG4gICAgLy8g0L3QsNC00L4g0LfQsNC80LXQvdC40YLRjCDQt9Cw0LPQu9GD0YjQutGDINC90LAg0YDQtdCw0LvRjNC90YvQtSDQuNC30L7QsdGA0LDQttC10L3QuNGPXG4gICAgY29uc3QgZGF0YVNyY3NldEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc3Jjc2V0XScpO1xuICAgIGRhdGFTcmNzZXRFbGVtZW50cy5mb3JFYWNoKChkYXRhU3Jjc2V0RWxlbWVudCkgPT4ge1xuICAgICAgZGF0YVNyY3NldEVsZW1lbnQuc3Jjc2V0ID0gZGF0YVNyY3NldEVsZW1lbnQuZGF0YXNldC5zcmNzZXQ7XG4gICAgICBkZWxldGUgZGF0YVNyY3NldEVsZW1lbnQuZGF0YXNldC5zcmNzZXQ7XG4gICAgfSk7XG4gICAgbmF0aXZlTGF6eWxvYWRJc0VuYWJsZWQgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGxhenlFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tsb2FkaW5nPVwibGF6eVwiXScpO1xuICAgIGxhenlFbGVtZW50cy5mb3JFYWNoKChsYXp5RWxlbWVudCkgPT4ge1xuICAgICAgbGF6eUVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnbGF6eWxvYWQnKTtcbiAgICB9KTtcbiAgICBhcHBlbmRMYXp5c2l6ZXNTY3JpcHQoKTtcbiAgfVxuXG4gIHJldHVybiB7IG5hdGl2ZUxhenlsb2FkSXNFbmFibGVkIH07XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgaW5pdExhenlsb2FkO1xuXG5cbi8vIGZ1bmN0aW9uIGluaXRMYXp5bG9hZCgpIHtcbi8vICAgbGV0IG5hdGl2ZUxhenlsb2FkSXNFbmFibGVkO1xuXG4vLyAgIGlmICgnbG9hZGluZycgaW4gSFRNTEltYWdlRWxlbWVudC5wcm90b3R5cGUpIHtcblxuLy8gICAgIGNvbnN0IHNyY3NldEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc3Jjc2V0XScpO1xuLy8gICAgIHNyY3NldEVsZW1lbnRzLmZvckVhY2goc3Jjc2V0RWxlbWVudCA9PiB7XG4vLyAgICAgICBzcmNzZXRFbGVtZW50LnNldEF0dHJpYnV0ZSgnc3Jjc2V0Jywgc3Jjc2V0RWxlbWVudC5kYXRhc2V0LnNyY3NldCk7XG4vLyAgICAgICBkZWxldGUgc3Jjc2V0RWxlbWVudC5kYXRhc2V0LnNyY3NldDtcbi8vICAgICB9KTtcblxuLy8gICAgIGNvbnN0IGltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXNyY10nKTtcbi8vICAgICBpbWFnZXMuZm9yRWFjaCgoaW1nKSA9PiB7XG4vLyAgICAgICBpbWcuc3JjID0gaW1nLmRhdGFzZXQuc3JjO1xuLy8gICAgICAgZGVsZXRlIGltZy5kYXRhc2V0LnNyYztcbi8vICAgICB9KTtcblxuLy8gICAgIG5hdGl2ZUxhenlsb2FkSXNFbmFibGVkID0gdHJ1ZTtcblxuLy8gICB9IGVsc2Uge1xuXG4vLyAgICAgY29uc3QgbGF6eUltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tsb2FkaW5nID0gXCJsYXp5XCJdJyk7XG4vLyAgICAgbGF6eUltYWdlcy5mb3JFYWNoKGxhenlJbWFnZSA9PiB7XG4vLyAgICAgICBsYXp5SW1hZ2UuY2xhc3NMaXN0LmFkZCgnbGF6eWxvYWQnKTtcbi8vICAgICB9KTtcblxuLy8gICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuLy8gICAgIHNjcmlwdC5zcmMgPSAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbGF6eXNpemVzLzUuMy4wL2xhenlzaXplcy5taW4uanMnO1xuLy8gICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kKHNjcmlwdCk7XG5cbi8vICAgICBuYXRpdmVMYXp5bG9hZElzRW5hYmxlZCA9IGZhbHNlO1xuXG4vLyAgIH1cblxuLy8gICByZXR1cm4geyBuYXRpdmVMYXp5bG9hZElzRW5hYmxlZCB9O1xuLy8gfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/js/lazyload.js\n");

/***/ }),

/***/ "./source/js/scrollonload.js":
/*!***********************************!*\
  !*** ./source/js/scrollonload.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n // Скрипт выполняет скролл до элемента с data-атрибутом DATA_ATTR_SELECTOR при наступлении события DOMContentLoaded\n// Значения Data атрибутов data-scroll-minvw и data-scroll-maxvw определяет промежуток viewport,\n// в котором будет выполняться скрипт\n\nconst DATA_ATTR_SELECTOR = '[data-scroll-on-load]';\nconst MIN_RESOLUTION_DATA_ATTR = 'scrollMinvw';\nconst MAX_RESOLUTION_DATA_ATTR = 'scrollMaxvw';\n\nfunction initScrollOnLoad() {\n  let element = document.querySelector(DATA_ATTR_SELECTOR);\n  if (!element) return;\n  let minVieportWidth = +element.dataset[MIN_RESOLUTION_DATA_ATTR] || 0;\n  let maxVieportWidth = +element.dataset[MAX_RESOLUTION_DATA_ATTR] || Infinity;\n  let currentViewportWidth = window.innerWidth;\n  if (currentViewportWidth < minVieportWidth || currentViewportWidth > maxVieportWidth) return;\n  document.addEventListener('DOMContentLoaded', () => {\n    let elementCoords = element.getBoundingClientRect();\n    let elementTop = pageYOffset + elementCoords.top;\n    window.scrollTo(0, elementTop);\n  }, {\n    once: true\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initScrollOnLoad);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2UvanMvc2Nyb2xsb25sb2FkLmpzPzFhOTAiXSwibmFtZXMiOlsiREFUQV9BVFRSX1NFTEVDVE9SIiwiTUlOX1JFU09MVVRJT05fREFUQV9BVFRSIiwiTUFYX1JFU09MVVRJT05fREFUQV9BVFRSIiwiaW5pdFNjcm9sbE9uTG9hZCIsImVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJtaW5WaWVwb3J0V2lkdGgiLCJkYXRhc2V0IiwibWF4VmllcG9ydFdpZHRoIiwiSW5maW5pdHkiLCJjdXJyZW50Vmlld3BvcnRXaWR0aCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJhZGRFdmVudExpc3RlbmVyIiwiZWxlbWVudENvb3JkcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImVsZW1lbnRUb3AiLCJwYWdlWU9mZnNldCIsInRvcCIsInNjcm9sbFRvIiwib25jZSJdLCJtYXBwaW5ncyI6IkFBQUE7Q0FFQTtBQUNBO0FBQ0E7O0FBSUEsTUFBTUEsa0JBQWtCLEdBQUcsdUJBQTNCO0FBQ0EsTUFBTUMsd0JBQXdCLEdBQUcsYUFBakM7QUFDQSxNQUFNQyx3QkFBd0IsR0FBRyxhQUFqQzs7QUFHQSxTQUFTQyxnQkFBVCxHQUE0QjtBQUMxQixNQUFJQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1Qk4sa0JBQXZCLENBQWQ7QUFDQSxNQUFJLENBQUNJLE9BQUwsRUFBYztBQUVkLE1BQUlHLGVBQWUsR0FBRyxDQUFDSCxPQUFPLENBQUNJLE9BQVIsQ0FBZ0JQLHdCQUFoQixDQUFELElBQThDLENBQXBFO0FBQ0EsTUFBSVEsZUFBZSxHQUFHLENBQUNMLE9BQU8sQ0FBQ0ksT0FBUixDQUFnQk4sd0JBQWhCLENBQUQsSUFBOENRLFFBQXBFO0FBQ0EsTUFBSUMsb0JBQW9CLEdBQUdDLE1BQU0sQ0FBQ0MsVUFBbEM7QUFDQSxNQUFJRixvQkFBb0IsR0FBR0osZUFBdkIsSUFBMENJLG9CQUFvQixHQUFHRixlQUFyRSxFQUFzRjtBQUV0RkosVUFBUSxDQUFDUyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOEMsTUFBTTtBQUNsRCxRQUFJQyxhQUFhLEdBQUdYLE9BQU8sQ0FBQ1kscUJBQVIsRUFBcEI7QUFDQSxRQUFJQyxVQUFVLEdBQUdDLFdBQVcsR0FBR0gsYUFBYSxDQUFDSSxHQUE3QztBQUVBUCxVQUFNLENBQUNRLFFBQVAsQ0FBZ0IsQ0FBaEIsRUFBbUJILFVBQW5CO0FBQ0QsR0FMRCxFQUtHO0FBQUNJLFFBQUksRUFBRTtBQUFQLEdBTEg7QUFPRDs7QUFHY2xCLCtFQUFmIiwiZmlsZSI6Ii4vc291cmNlL2pzL3Njcm9sbG9ubG9hZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8g0KHQutGA0LjQv9GCINCy0YvQv9C+0LvQvdGP0LXRgiDRgdC60YDQvtC70Lsg0LTQviDRjdC70LXQvNC10L3RgtCwINGBIGRhdGEt0LDRgtGA0LjQsdGD0YLQvtC8IERBVEFfQVRUUl9TRUxFQ1RPUiDQv9GA0Lgg0L3QsNGB0YLRg9C/0LvQtdC90LjQuCDRgdC+0LHRi9GC0LjRjyBET01Db250ZW50TG9hZGVkXG4vLyDQl9C90LDRh9C10L3QuNGPIERhdGEg0LDRgtGA0LjQsdGD0YLQvtCyIGRhdGEtc2Nyb2xsLW1pbnZ3INC4IGRhdGEtc2Nyb2xsLW1heHZ3INC+0L/RgNC10LTQtdC70Y/QtdGCINC/0YDQvtC80LXQttGD0YLQvtC6IHZpZXdwb3J0LFxuLy8g0LIg0LrQvtGC0L7RgNC+0Lwg0LHRg9C00LXRgiDQstGL0L/QvtC70L3Rj9GC0YzRgdGPINGB0LrRgNC40L/RglxuXG5cblxuY29uc3QgREFUQV9BVFRSX1NFTEVDVE9SID0gJ1tkYXRhLXNjcm9sbC1vbi1sb2FkXSc7XG5jb25zdCBNSU5fUkVTT0xVVElPTl9EQVRBX0FUVFIgPSAnc2Nyb2xsTWludncnO1xuY29uc3QgTUFYX1JFU09MVVRJT05fREFUQV9BVFRSID0gJ3Njcm9sbE1heHZ3JztcblxuXG5mdW5jdGlvbiBpbml0U2Nyb2xsT25Mb2FkKCkge1xuICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoREFUQV9BVFRSX1NFTEVDVE9SKTtcbiAgaWYgKCFlbGVtZW50KSByZXR1cm47XG5cbiAgbGV0IG1pblZpZXBvcnRXaWR0aCA9ICtlbGVtZW50LmRhdGFzZXRbTUlOX1JFU09MVVRJT05fREFUQV9BVFRSXSB8fCAwO1xuICBsZXQgbWF4VmllcG9ydFdpZHRoID0gK2VsZW1lbnQuZGF0YXNldFtNQVhfUkVTT0xVVElPTl9EQVRBX0FUVFJdIHx8IEluZmluaXR5O1xuICBsZXQgY3VycmVudFZpZXdwb3J0V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgaWYgKGN1cnJlbnRWaWV3cG9ydFdpZHRoIDwgbWluVmllcG9ydFdpZHRoIHx8IGN1cnJlbnRWaWV3cG9ydFdpZHRoID4gbWF4VmllcG9ydFdpZHRoKSByZXR1cm47XG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICBsZXQgZWxlbWVudENvb3JkcyA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgbGV0IGVsZW1lbnRUb3AgPSBwYWdlWU9mZnNldCArIGVsZW1lbnRDb29yZHMudG9wO1xuXG4gICAgd2luZG93LnNjcm9sbFRvKDAsIGVsZW1lbnRUb3ApO1xuICB9LCB7b25jZTogdHJ1ZX0pO1xuXG59XG5cblxuZXhwb3J0IGRlZmF1bHQgaW5pdFNjcm9sbE9uTG9hZDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/js/scrollonload.js\n");

/***/ }),

/***/ "./source/js/util.js":
/*!***************************!*\
  !*** ./source/js/util.js ***!
  \***************************/
/*! exports provided: isEscapePressEvent, isEnterPressEvent, isLeftButtonMouseDown, scrollLock, executeAfterAnimationEnd, isTouchDevice, generateId, ajaxRequest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEscapePressEvent\", function() { return isEscapePressEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEnterPressEvent\", function() { return isEnterPressEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLeftButtonMouseDown\", function() { return isLeftButtonMouseDown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scrollLock\", function() { return scrollLock; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"executeAfterAnimationEnd\", function() { return executeAfterAnimationEnd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTouchDevice\", function() { return isTouchDevice; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateId\", function() { return generateId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ajaxRequest\", function() { return ajaxRequest; });\nfunction isEscapePressEvent(evt, callback) {\n  if (evt.code === 'Escape') {\n    callback();\n  }\n}\nfunction isEnterPressEvent(evt, callback) {\n  if (evt.code === 'Enter') {\n    callback();\n  }\n}\nfunction isLeftButtonMouseDown(evt, callback) {\n  if (evt.which === 1) {\n    callback();\n  }\n} // функция, отключающая нежелательные эффекты при position: fixed\n\nlet scrollPosition;\nfunction scrollLock({\n  lock = true\n} = {}) {\n  const html = document.documentElement;\n  const htmlStyle = html.style;\n  let marginSize;\n\n  if (lock) {\n    scrollPosition = window.pageYOffset;\n    marginSize = window.innerWidth - html.clientWidth;\n    htmlStyle.position = 'fixed';\n    htmlStyle.top = -scrollPosition + 'px';\n    htmlStyle.right = '0';\n    htmlStyle.left = '0';\n    htmlStyle.overflow = 'hidden';\n\n    if (marginSize) {\n      // при position: fixed пропадает полоса прокрутки,\n      // в результате контент под окном занимает его место.\n      // Для блокирования этого эффекта используем margin\n      htmlStyle.marginRight = marginSize + 'px';\n    }\n  } else {\n    htmlStyle.top = '';\n    htmlStyle.position = '';\n    htmlStyle.right = '';\n    htmlStyle.left = '';\n    htmlStyle.overflow = '';\n    htmlStyle.marginRight = '';\n    window.scrollTo(0, scrollPosition);\n  }\n} //  Функция\n//  Добавляет класс анимации на элемент.\n//  Класс должнен иметь свойство с описанием анимации в CSS\n//  Ожидает выполнения анимации, после чего выполняет колбэк и подчищает за собой\n\nfunction executeAfterAnimationEnd({\n  element,\n  animationClass,\n  animationName,\n  callback\n}) {\n  function execute(evt) {\n    if (evt.animationName === animationName) {\n      element.classList.remove(animationClass);\n      callback(); // if (element) {\n      //   element.removeEventListener('animationend', execute);\n      // }\n    }\n  }\n\n  element.addEventListener('animationend', execute, {\n    once: true\n  });\n  element.classList.add(animationClass);\n}\nlet isTouchSupport;\nfunction isTouchDevice() {\n  if (isTouchSupport !== undefined) return isTouchSupport;\n  isTouchSupport = true;\n\n  try {\n    document.createEvent('TouchEvent');\n  } catch (err) {\n    isTouchSupport = false;\n  }\n\n  return isTouchSupport;\n}\nlet id = 0;\nfunction generateId() {\n  return 'generatedId-' + ++id;\n}\nfunction ajaxRequest({\n  url,\n  method = 'GET',\n  responseType,\n  sendingData,\n  beforeSend,\n  onLoad,\n  onError,\n  timeout = 10000,\n  requestHeader\n}) {\n  const StatusCode = {\n    OK: 200\n  };\n  const xhr = new XMLHttpRequest();\n  xhr.open(method, url);\n  xhr.responseType = responseType;\n  xhr.timeout = timeout;\n\n  if (requestHeader) {\n    xhr.setRequestHeader(requestHeader.headerName, requestHeader.headerValue);\n  }\n\n  if (typeof beforeSend === 'function') {\n    beforeSend();\n  }\n\n  xhr.send(sendingData);\n  xhr.addEventListener('load', function () {\n    if (xhr.status === StatusCode.OK) {\n      if (typeof onLoad === 'function') {\n        onLoad(xhr.response);\n      }\n    } else {\n      onError('Cтатус ответа: ' + xhr.status + ' ' + xhr.statusText);\n    }\n  });\n  xhr.addEventListener('error', function () {\n    if (typeof onError === 'function') {\n      onError('Произошла ошибка соединения');\n    } else {\n      console.log('Произошла ошибка соединения');\n    }\n  });\n  xhr.addEventListener('timeout', function () {\n    if (typeof onError === 'function') {\n      onError('Запрос не успел выполниться за ' + xhr.timeout + 'мс');\n    } else {\n      console.log('Запрос не успел выполниться за ' + xhr.timeout + 'мс');\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/util.js\n");

/***/ }),

/***/ "./source/sass/blocks/accordion/_accordion.js":
/*!****************************************************!*\
  !*** ./source/sass/blocks/accordion/_accordion.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass Accordion {\n  constructor(overrides) {\n    const defaults = {\n      accordionClassName: 'accordion',\n      buttonSelector: '.accordion__button',\n      contentWrapperClassName: 'accordion__content-wrapper',\n      initStateDataAttribute: 'accordionOpen',\n      additionalClassDataAttribute: 'accordionClass'\n    };\n    Object.assign(this, defaults, overrides);\n    this._headingElements = Array.from(document.querySelectorAll('.' + this.accordionClassName));\n\n    this._headingElements.forEach(heading => {\n      let initStateIsOpened = this._getInitState(heading);\n\n      this._addButton(heading, initStateIsOpened);\n\n      let contents = this._getContent(heading); // Create a wrapper element for `contents` and hide it\n\n\n      let wrapper = document.createElement('div');\n      wrapper.classList.add(this.contentWrapperClassName);\n\n      if (!initStateIsOpened) {\n        wrapper.hidden = true;\n      } // adding additional classes\n\n\n      let additionalClass = heading.dataset[this.additionalClassDataAttribute];\n\n      if (additionalClass) {\n        let additionalClasses = additionalClass.split(' ');\n        additionalClasses.forEach(className => {\n          wrapper.classList.add(className);\n        });\n      } // Add each element of `contents` to `wrapper`\n\n\n      contents.forEach(node => {\n        wrapper.appendChild(node);\n      }); // Add the wrapped content back into the DOM\n      // after the heading\n\n      heading.parentNode.insertBefore(wrapper, heading.nextElementSibling);\n    });\n\n    document.addEventListener('click', evt => {\n      let buttonElement = evt.target.closest(this.buttonSelector);\n      if (!buttonElement) return;\n      let isExpanded = buttonElement.getAttribute('aria-expanded') === 'true' || false;\n      buttonElement.setAttribute('aria-expanded', !isExpanded); // let parent = buttonElement.parentNode;\n\n      let wrapper = buttonElement.parentNode.nextElementSibling;\n      let targetStateIsOpen = !isExpanded;\n\n      if (targetStateIsOpen) {\n        // поведение при открытии\n        wrapper.addEventListener('transitionend', () => {\n          wrapper.style.height = 'auto';\n          wrapper.style.overflow = '';\n        }, {\n          once: true\n        });\n        wrapper.style.height = 0;\n        wrapper.style.overflow = 'hidden';\n        wrapper.hidden = false;\n        let fullHeight = wrapper.scrollHeight;\n        wrapper.style.height = fullHeight + 'px';\n      } else {\n        // закрытие\n        let fullHeight = wrapper.scrollHeight;\n        wrapper.style.height = fullHeight + 'px';\n        wrapper.addEventListener('transitionend', () => {\n          wrapper.style.height = 'auto';\n          wrapper.style.overflow = '';\n          wrapper.hidden = true;\n          wrapper.style.transitionDuration = '';\n        }, {\n          once: true\n        });\n        setTimeout(() => {\n          wrapper.style.transitionDuration = '75ms';\n          wrapper.style.overflow = 'hidden';\n          wrapper.style.height = 0;\n        }, 0);\n      }\n    });\n  }\n\n  _getInitState(heading) {\n    let initStateIsOpened;\n    let widthOpened = heading.dataset[this.initStateDataAttribute];\n\n    switch (widthOpened) {\n      case undefined:\n        initStateIsOpened = false;\n        break;\n\n      case '':\n        initStateIsOpened = true;\n        break;\n\n      default:\n        initStateIsOpened = window.innerWidth >= widthOpened;\n    }\n\n    return initStateIsOpened;\n  }\n\n  _addButton(heading, initStateIsOpened) {\n    heading.innerHTML = \"<button class=\\\"accordion__button\\\" aria-expanded=\\\"\".concat(initStateIsOpened, \"\\\" type=\\\"button\\\">\\n                            \").concat(heading.textContent, \"\\n                            <svg class=\\\"accordion__button-icon\\\" width=\\\"32\\\" height=\\\"32\\\">\\n                              <use href=\\\"img/svg/_sprite.svg#icon-arrow\\\"></use>\\n                            </svg>\\n                          </button>\");\n  }\n\n  _getContent(elem) {\n    // Function to create a node list\n    // of the content between this <h2> and the next\n    let elems = [];\n\n    while (elem.nextElementSibling && !elem.nextElementSibling.classList.contains(this.accordionClassName)) {\n      elems.push(elem.nextElementSibling);\n      elem = elem.nextElementSibling;\n    } // Delete the old versions of the content nodes\n\n\n    elems.forEach(node => {\n      node.parentNode.removeChild(node);\n    });\n    return elems;\n  }\n\n}\n\nfunction initAccordion() {\n  return new Accordion();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initAccordion);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/accordion/_accordion.js\n");

/***/ }),

/***/ "./source/sass/blocks/custom-select/_custom-select.js":
/*!************************************************************!*\
  !*** ./source/sass/blocks/custom-select/_custom-select.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_custom_focus_events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/custom-focus-events.js */ \"./source/js/custom-focus-events.js\");\n/* harmony import */ var _js_util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../js/util.js */ \"./source/js/util.js\");\n\n\n\nclass CustomSelect {\n  constructor(element, overrides) {\n    const defaults = {\n      mainSelector: '.custom-select',\n      inputSelector: 'input',\n      listSelector: '.custom-select__list',\n      listCloseClass: 'custom-select__list--closed',\n      itemSelector: '.custom-select__item',\n      statusSelector: '[aria-live=\"polite\"]',\n      itemTitleSelector: '.custom-select__item-title',\n      filteredStatusPrefix: 'Доступно вариантов : '\n    };\n    Object.assign(this, defaults, overrides);\n    this.element = element;\n    this.inputElement = this.element.querySelector(this.inputSelector);\n    this.state = {\n      isOpened: false\n    };\n    this.listElement = this.element.querySelector(this.listSelector);\n    this.itemElements = this.element.querySelectorAll(this.itemSelector);\n    this.items = Array.from(this.itemElements);\n    this.statusElement = this.element.querySelector(this.statusSelector); // generate ID for list\n\n    let listId = Object(_js_util_js__WEBPACK_IMPORTED_MODULE_1__[\"generateId\"])();\n    this.listElement.id = listId; // * setting Aria attributes\n\n    this.element.setAttribute('role', 'combobox');\n    this.element.setAttribute('aria-haspopup', 'listbox');\n    this.element.setAttribute('aria-owns', this.listElement.id);\n    this.element.setAttribute('aria-expanded', 'false');\n    this.inputElement.setAttribute('aria-controls', this.listElement.id);\n    this.inputElement.setAttribute('aria-autocomplete', 'both');\n    this.listElement.setAttribute('role', 'listbox');\n    this.itemElements.forEach(function (item) {\n      item.setAttribute('role', 'option');\n      item.setAttribute('tabindex', '-1');\n    }); // * Adding handlers\n\n    this.inputElement.addEventListener('click', () => {\n      this._toggleList();\n    });\n    this.listElement.addEventListener('click', () => {\n      const focusedElement = document.activeElement;\n\n      if (focusedElement.tagName === 'LI') {\n        this._makeChoice(focusedElement);\n\n        this._toggleList();\n      }\n    });\n    this.element.addEventListener('keyup', evt => {\n      this._doKeyAction(evt.key);\n    });\n    Object(_js_custom_focus_events_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.element);\n    this.element.addEventListener('focusLeave', () => {\n      if (this.state.isOpened) {\n        this._toggleList('shut');\n      }\n    });\n    document.addEventListener('click', evt => {\n      if (!evt.target.closest(this.mainSelector) && this.state.isOpened) {\n        this._toggleList('shut');\n      }\n    });\n  }\n\n  _toggleList(action = 'toggle') {\n    let _openList = () => {\n      this.listElement.classList.remove(this.listCloseClass);\n      this.element.setAttribute('aria-expanded', 'true');\n      this.state.isOpened = true;\n    };\n\n    let _closeList = () => {\n      this.listElement.classList.add(this.listCloseClass);\n      this.element.setAttribute('aria-expanded', 'false');\n      this.state.isOpened = false;\n    };\n\n    switch (action) {\n      case 'toggle':\n        if (this.state.isOpened) {\n          _closeList();\n        } else {\n          _openList();\n        }\n\n        break;\n\n      case 'open':\n        _openList();\n\n        break;\n\n      case 'shut':\n        _closeList();\n\n        break;\n    }\n  }\n\n  _makeChoice(focusedItem) {\n    const itemTitle = focusedItem.querySelector(this.itemTitleSelector);\n    this.inputElement.value = itemTitle.textContent;\n    this.inputElement.focus();\n  }\n\n  _moveFocus({\n    moveDirection\n  }) {\n    const visibleItems = this.items.filter(item => item.style.display === '');\n    const currentFocus = document.activeElement;\n    let currentIndex;\n\n    let _moveFocusUp = () => {\n      switch (true) {\n        case currentFocus === this.inputElement:\n          visibleItems[visibleItems.length - 1].focus();\n          break;\n\n        case currentFocus.tagName === 'LI':\n          currentIndex = visibleItems.indexOf(currentFocus);\n\n          if (currentIndex === 0) {\n            this.inputElement.focus();\n          } else {\n            visibleItems[currentIndex - 1].focus();\n          }\n\n          break;\n      }\n    };\n\n    let _moveFocusDown = () => {\n      switch (true) {\n        case currentFocus === this.inputElement:\n          visibleItems[0].focus();\n          break;\n\n        case currentFocus.tagName === 'LI':\n          currentIndex = visibleItems.indexOf(currentFocus);\n\n          if (currentIndex !== visibleItems.length - 1) {\n            visibleItems[currentIndex + 1].focus();\n          } else {\n            visibleItems[0].focus();\n          }\n\n          break;\n      }\n    };\n\n    if (visibleItems.length === 0) return;\n\n    if (moveDirection === 'up') {\n      _moveFocusUp();\n    } else {\n      _moveFocusDown();\n    }\n  }\n\n  _doKeyAction(key) {\n    const currentFocus = document.activeElement;\n\n    switch (key) {\n      case 'Enter':\n        if (this.state.isOpened && currentFocus.tagName === 'LI') {\n          this._makeChoice(currentFocus);\n        }\n\n        this._toggleList();\n\n        break;\n\n      case 'Escape':\n        if (this.state.isOpened) {\n          this._toggleList();\n        }\n\n        break;\n\n      case 'ArrowDown':\n        if (!this.state.isOpened) {\n          this._toggleList();\n        }\n\n        this._moveFocus({\n          moveDirection: 'down'\n        });\n\n        break;\n\n      case 'ArrowUp':\n        if (!this.state.isOpened) {\n          this._toggleList();\n        }\n\n        this._moveFocus({\n          moveDirection: 'up'\n        });\n\n        break;\n\n      default:\n        if (!this.state.isOpened) {\n          this._toggleList();\n        }\n\n        this._doFilter();\n\n        break;\n    }\n  }\n\n  _doFilter() {\n    const terms = this.inputElement.value;\n    this.itemElements.forEach(item => item.style.display = 'none');\n    const filteredItems = this.items.filter(item => item.innerText.toUpperCase().startsWith(terms.toUpperCase()));\n    filteredItems.forEach(item => item.style.display = '');\n\n    this._updateStatus(filteredItems.length);\n  }\n\n  _updateStatus(itemsQuantity) {\n    this.statusElement.textContent = this.filteredStatusPrefix + itemsQuantity;\n  }\n\n}\n\nconst mainSelector = '.custom-select';\n\nfunction initCustomSelects() {\n  const customSelectElements = document.querySelectorAll(mainSelector);\n  const customSelects = [].map.call(customSelectElements, elem => new CustomSelect(elem));\n  return customSelects;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initCustomSelects);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/custom-select/_custom-select.js\n");

/***/ }),

/***/ "./source/sass/blocks/main-nav/_main-nav.js":
/*!**************************************************!*\
  !*** ./source/sass/blocks/main-nav/_main-nav.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/util.js */ \"./source/js/util.js\");\n // Определить поддержку hover\n// Если поддержки нет - блокировать первый клик по меню первого уровня\n\nclass MainNav {\n  constructor(overrides) {\n    const defaults = {\n      mainSelector: '.main-nav',\n      mainListSelector: '.main-nav__list--lvl1',\n      firstLevelLinkSelector: '.main-nav__link--lvl1'\n    };\n    Object.assign(this, defaults, overrides);\n    this._mainElement = null;\n    this._firstClickedElement = null;\n\n    if (Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"isTouchDevice\"])()) {\n      this._init();\n\n      this._enableFirstClickPrevention();\n    }\n  }\n\n  _init() {\n    this._mainElement = document.querySelector(this.mainSelector);\n  }\n\n  _enableFirstClickPrevention() {\n    this._mainElement.addEventListener('click', evt => {\n      let target = evt.target.closest(this.firstLevelLinkSelector);\n      if (!target) return; // если по элементу кликнули первый раз\n\n      if (this._firstClickedElement !== target) {\n        //отменяем переход по ссылке\n        evt.preventDefault(); // При клике за пределами меню (закрытие меню)\n        // обнулить _firstClickedElement и удалить обработчик\n\n        document.addEventListener('click', evt => {\n          let target = evt.target.closest(this.mainListSelector);\n\n          if (!target) {\n            this._firstClickedElement = null;\n          }\n        }, {\n          capture: true,\n          once: true\n        });\n      }\n\n      this._firstClickedElement = target;\n    });\n  }\n\n}\n\nfunction initMainNav() {\n  return new MainNav();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initMainNav);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvbWFpbi1uYXYvX21haW4tbmF2LmpzPzk5NjYiXSwibmFtZXMiOlsiTWFpbk5hdiIsImNvbnN0cnVjdG9yIiwib3ZlcnJpZGVzIiwiZGVmYXVsdHMiLCJtYWluU2VsZWN0b3IiLCJtYWluTGlzdFNlbGVjdG9yIiwiZmlyc3RMZXZlbExpbmtTZWxlY3RvciIsIk9iamVjdCIsImFzc2lnbiIsIl9tYWluRWxlbWVudCIsIl9maXJzdENsaWNrZWRFbGVtZW50IiwiaXNUb3VjaERldmljZSIsIl9pbml0IiwiX2VuYWJsZUZpcnN0Q2xpY2tQcmV2ZW50aW9uIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsInRhcmdldCIsImNsb3Nlc3QiLCJwcmV2ZW50RGVmYXVsdCIsImNhcHR1cmUiLCJvbmNlIiwiaW5pdE1haW5OYXYiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Q0FDQTtBQUNBOztBQUdBLE1BQU1BLE9BQU4sQ0FBYztBQUNaQyxhQUFXLENBQUNDLFNBQUQsRUFBWTtBQUNyQixVQUFNQyxRQUFRLEdBQUc7QUFDZkMsa0JBQVksRUFBRSxXQURDO0FBRWZDLHNCQUFnQixFQUFFLHVCQUZIO0FBR2ZDLDRCQUFzQixFQUFFO0FBSFQsS0FBakI7QUFNQUMsVUFBTSxDQUFDQyxNQUFQLENBQWMsSUFBZCxFQUFvQkwsUUFBcEIsRUFBOEJELFNBQTlCO0FBRUEsU0FBS08sWUFBTCxHQUFvQixJQUFwQjtBQUNBLFNBQUtDLG9CQUFMLEdBQTRCLElBQTVCOztBQUdBLFFBQUlDLGlFQUFhLEVBQWpCLEVBQXFCO0FBQ25CLFdBQUtDLEtBQUw7O0FBQ0EsV0FBS0MsMkJBQUw7QUFDRDtBQUNGOztBQUVERCxPQUFLLEdBQUc7QUFDTixTQUFLSCxZQUFMLEdBQW9CSyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBS1gsWUFBNUIsQ0FBcEI7QUFDRDs7QUFFRFMsNkJBQTJCLEdBQUc7QUFDNUIsU0FBS0osWUFBTCxDQUFrQk8sZ0JBQWxCLENBQW1DLE9BQW5DLEVBQTZDQyxHQUFELElBQVM7QUFDbkQsVUFBSUMsTUFBTSxHQUFHRCxHQUFHLENBQUNDLE1BQUosQ0FBV0MsT0FBWCxDQUFtQixLQUFLYixzQkFBeEIsQ0FBYjtBQUNBLFVBQUksQ0FBQ1ksTUFBTCxFQUFhLE9BRnNDLENBSW5EOztBQUNBLFVBQUksS0FBS1Isb0JBQUwsS0FBOEJRLE1BQWxDLEVBQTBDO0FBQ3hDO0FBQ0FELFdBQUcsQ0FBQ0csY0FBSixHQUZ3QyxDQUd4QztBQUNBOztBQUNBTixnQkFBUSxDQUFDRSxnQkFBVCxDQUEwQixPQUExQixFQUFvQ0MsR0FBRCxJQUFTO0FBQzFDLGNBQUlDLE1BQU0sR0FBR0QsR0FBRyxDQUFDQyxNQUFKLENBQVdDLE9BQVgsQ0FBbUIsS0FBS2QsZ0JBQXhCLENBQWI7O0FBQ0EsY0FBSSxDQUFDYSxNQUFMLEVBQWE7QUFDWCxpQkFBS1Isb0JBQUwsR0FBNEIsSUFBNUI7QUFDRDtBQUNGLFNBTEQsRUFLRztBQUFDVyxpQkFBTyxFQUFFLElBQVY7QUFBZ0JDLGNBQUksRUFBRTtBQUF0QixTQUxIO0FBTUQ7O0FBRUQsV0FBS1osb0JBQUwsR0FBNEJRLE1BQTVCO0FBQ0QsS0FuQkQ7QUFvQkQ7O0FBN0NXOztBQWtEZCxTQUFTSyxXQUFULEdBQXVCO0FBQ3JCLFNBQU8sSUFBSXZCLE9BQUosRUFBUDtBQUNEOztBQUVjdUIsMEVBQWYiLCJmaWxlIjoiLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvbWFpbi1uYXYvX21haW4tbmF2LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNUb3VjaERldmljZSB9IGZyb20gICcuLi8uLi8uLi9qcy91dGlsLmpzJztcbi8vINCe0L/RgNC10LTQtdC70LjRgtGMINC/0L7QtNC00LXRgNC20LrRgyBob3ZlclxuLy8g0JXRgdC70Lgg0L/QvtC00LTQtdGA0LbQutC4INC90LXRgiAtINCx0LvQvtC60LjRgNC+0LLQsNGC0Ywg0L/QtdGA0LLRi9C5INC60LvQuNC6INC/0L4g0LzQtdC90Y4g0L/QtdGA0LLQvtCz0L4g0YPRgNC+0LLQvdGPXG5cblxuY2xhc3MgTWFpbk5hdiB7XG4gIGNvbnN0cnVjdG9yKG92ZXJyaWRlcykge1xuICAgIGNvbnN0IGRlZmF1bHRzID0ge1xuICAgICAgbWFpblNlbGVjdG9yOiAnLm1haW4tbmF2JyxcbiAgICAgIG1haW5MaXN0U2VsZWN0b3I6ICcubWFpbi1uYXZfX2xpc3QtLWx2bDEnLFxuICAgICAgZmlyc3RMZXZlbExpbmtTZWxlY3RvcjogJy5tYWluLW5hdl9fbGluay0tbHZsMSdcbiAgICB9O1xuXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCBkZWZhdWx0cywgb3ZlcnJpZGVzKTtcblxuICAgIHRoaXMuX21haW5FbGVtZW50ID0gbnVsbDtcbiAgICB0aGlzLl9maXJzdENsaWNrZWRFbGVtZW50ID0gbnVsbDtcblxuXG4gICAgaWYgKGlzVG91Y2hEZXZpY2UoKSkge1xuICAgICAgdGhpcy5faW5pdCgpO1xuICAgICAgdGhpcy5fZW5hYmxlRmlyc3RDbGlja1ByZXZlbnRpb24oKTtcbiAgICB9XG4gIH1cblxuICBfaW5pdCgpIHtcbiAgICB0aGlzLl9tYWluRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5tYWluU2VsZWN0b3IpO1xuICB9XG5cbiAgX2VuYWJsZUZpcnN0Q2xpY2tQcmV2ZW50aW9uKCkge1xuICAgIHRoaXMuX21haW5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgbGV0IHRhcmdldCA9IGV2dC50YXJnZXQuY2xvc2VzdCh0aGlzLmZpcnN0TGV2ZWxMaW5rU2VsZWN0b3IpO1xuICAgICAgaWYgKCF0YXJnZXQpIHJldHVybjtcblxuICAgICAgLy8g0LXRgdC70Lgg0L/QviDRjdC70LXQvNC10L3RgtGDINC60LvQuNC60L3Rg9C70Lgg0L/QtdGA0LLRi9C5INGA0LDQt1xuICAgICAgaWYgKHRoaXMuX2ZpcnN0Q2xpY2tlZEVsZW1lbnQgIT09IHRhcmdldCkge1xuICAgICAgICAvL9C+0YLQvNC10L3Rj9C10Lwg0L/QtdGA0LXRhdC+0LQg0L/QviDRgdGB0YvQu9C60LVcbiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIC8vINCf0YDQuCDQutC70LjQutC1INC30LAg0L/RgNC10LTQtdC70LDQvNC4INC80LXQvdGOICjQt9Cw0LrRgNGL0YLQuNC1INC80LXQvdGOKVxuICAgICAgICAvLyDQvtCx0L3Rg9C70LjRgtGMIF9maXJzdENsaWNrZWRFbGVtZW50INC4INGD0LTQsNC70LjRgtGMINC+0LHRgNCw0LHQvtGC0YfQuNC6XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgICAgIGxldCB0YXJnZXQgPSBldnQudGFyZ2V0LmNsb3Nlc3QodGhpcy5tYWluTGlzdFNlbGVjdG9yKTtcbiAgICAgICAgICBpZiAoIXRhcmdldCkge1xuICAgICAgICAgICAgdGhpcy5fZmlyc3RDbGlja2VkRWxlbWVudCA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB7Y2FwdHVyZTogdHJ1ZSwgb25jZTogdHJ1ZX0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9maXJzdENsaWNrZWRFbGVtZW50ID0gdGFyZ2V0O1xuICAgIH0pO1xuICB9XG5cbn1cblxuXG5mdW5jdGlvbiBpbml0TWFpbk5hdigpIHtcbiAgcmV0dXJuIG5ldyBNYWluTmF2KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluaXRNYWluTmF2O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/sass/blocks/main-nav/_main-nav.js\n");

/***/ }),

/***/ "./source/sass/blocks/modal/_modal--bounded.js":
/*!*****************************************************!*\
  !*** ./source/sass/blocks/modal/_modal--bounded.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/util.js */ \"./source/js/util.js\");\n\n\nclass ModalBounded {\n  constructor(overrides) {\n    const defaults = {\n      openButtonSelector: undefined,\n      modalSelector: undefined,\n      parentSelector: undefined,\n      parentBoundSelector: 'modal__parent-bound',\n      closeModalClass: 'modal--closed',\n      // closeButtonSelector : '.modal__close-button',\n      overlaySelector: 'overlay',\n      showDelay: 150,\n      closeDelay: 200\n    };\n    Object.assign(this, defaults, overrides);\n    this._parentElement = undefined;\n    this._modalElement = undefined;\n    this._isOpened = false;\n    this._buttonElement = document.querySelector(this.openButtonSelector);\n\n    this._buttonElement.addEventListener('click', this._showModal.bind(this));\n\n    this._buttonElement.addEventListener('mouseenter', evt => {\n      this._timerOpenId = setTimeout(() => this._showModal(evt), this.showDelay);\n    });\n\n    this._buttonElement.addEventListener('mouseleave', () => clearTimeout(this._timerOpenId));\n  }\n\n  _showModal(evt) {\n    const createElements = () => {\n      if (!this._parentElement || !this._modalElement) {\n        this._parentElement = document.querySelector(this.parentSelector);\n        this._modalElement = this._parentElement.querySelector(this.modalSelector);\n      } // if (!this._closeButtonElement) {\n      //   this._closeButtonElement = this._modalElement.querySelector(this.closeButtonSelector);\n      // }\n\n    };\n\n    const addOverlay = () => {\n      this._overlayElement = document.createElement('div');\n\n      this._overlayElement.classList.add(this.overlaySelector);\n\n      this._parentElement.before(this._overlayElement);\n    };\n\n    const configClasses = () => {\n      this._parentElement.classList.add(this.parentBoundSelector);\n\n      this._modalElement.classList.remove(this.closeModalClass);\n    };\n\n    const addHandlers = () => {\n      this._onOverlayClick = () => {\n        clearTimeout(this._timerCloseId);\n\n        this._closeModal();\n      };\n\n      this._onDocumentKeydown = evt => {\n        Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"isEscapePressEvent\"])(evt, this._closeModal.bind(this));\n      };\n\n      this._onCloseButtonClick = () => {\n        this._closeModal();\n      };\n\n      this._onModalMouseLeave = () => {\n        this._timerCloseId = setTimeout(() => this._closeModal(), this.closeDelay);\n      };\n\n      this._onModalMouseEnter = () => {\n        clearTimeout(this._timerCloseId);\n      };\n\n      this._overlayElement.addEventListener('click', this._onOverlayClick);\n\n      document.addEventListener('keydown', this._onDocumentKeydown); // if (this._closeButtonElement) {\n      //   this._closeButtonElement.addEventListener('click', this._onCloseButtonClick);\n      // }\n\n      this._parentElement.addEventListener('mouseleave', this._onModalMouseLeave);\n\n      this._parentElement.addEventListener('mouseenter', this._onModalMouseEnter);\n    };\n\n    if (this._isOpened) return;\n    evt.preventDefault();\n    createElements();\n    addOverlay();\n    configClasses();\n    addHandlers(); // scrollLock({lock: true});\n\n    this._isOpened = true;\n  }\n\n  _closeModal() {\n    const removeOverlay = () => {\n      this._overlayElement.remove();\n    };\n\n    const configClasses = () => {\n      this._parentElement.classList.remove(this.parentBoundSelector);\n\n      this._modalElement.classList.add(this.closeModalClass);\n    };\n\n    const removeHandlers = () => {\n      this._overlayElement.removeEventListener('click', this._onOverlayClick);\n\n      document.removeEventListener('keydown', this._onDocumentKeydown); // if (this._closeButtonElement) {\n      //   this._closeButtonElement.removeEventListener('click', this._onCloseButtonClick);\n      // }\n\n      this._parentElement.removeEventListener('mouseleave', this._onModalMouseLeave);\n\n      this._parentElement.removeEventListener('mouseenter', this._onModalMouseEnter);\n    };\n\n    removeOverlay();\n    configClasses();\n    removeHandlers(); // scrollLock({lock: false});\n\n    this._isOpened = false;\n  }\n\n}\n\nfunction initBoundedModals() {\n  const modalContactsArgs = {\n    openButtonSelector: '.header__contacts-button',\n    modalSelector: '.header__contacts .modal',\n    parentSelector: '.header__contacts'\n  };\n  const modalUserArgs = {\n    openButtonSelector: '.header__user .header__link',\n    modalSelector: '.header__user .modal',\n    parentSelector: '.header__user'\n  };\n  const modalCartArgs = {\n    openButtonSelector: '.header__cart .header__link',\n    modalSelector: '.header__cart .modal',\n    parentSelector: '.header__cart'\n  };\n  let modals = [new ModalBounded(modalContactsArgs), new ModalBounded(modalUserArgs), new ModalBounded(modalCartArgs)];\n  return modals;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initBoundedModals);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/modal/_modal--bounded.js\n");

/***/ }),

/***/ "./source/sass/blocks/modal/_modal.js":
/*!********************************************!*\
  !*** ./source/sass/blocks/modal/_modal.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/util.js */ \"./source/js/util.js\");\n\n\n\nconst ModalPosition = {\n  CENTER: 'center',\n  LEFT: 'left'\n};\nconst ModalPositionClasses = {\n  [ModalPosition.CENTER]: 'modal--center',\n  [ModalPosition.LEFT]: 'modal--left'\n};\nconst ModalSize = {\n  SMALL: 'small',\n  BIG: 'big'\n};\nconst ModalSizeClasses = {\n  [ModalSize.SMALL]: 'modal--small',\n  [ModalSize.BIG]: 'modal--big'\n};\n\nclass Modal {\n  constructor(overrides) {\n    const defaults = {\n      triggerDataAttributeName: 'data-modal',\n      closeModalClass: 'modal__content--closed',\n      contentModalClass: 'modal__content',\n      modalTemplateSelector: '#modal',\n      modalBodySelector: '.modal',\n      modalTypeDataAttribute: 'modalPosition',\n      defaultPosition: ModalPosition.CENTER,\n      modalSizeDataAttribute: 'modalSize',\n      overlaySelector: 'overlay',\n      modalOverlaySelector: 'modal__overlay',\n      closeButtonSelector: '.modal__close-button',\n      focusElements: [// 'a[href]',\n      // 'area[href]',\n      'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden]):not(.button--modal-close)', 'iframe', '[tabindex]:not([tabindex^=\"-\"])'],\n      animationOnCloseClass: 'modal--animation-on-close',\n      animationOnCloseName: 'hideModal'\n    };\n    Object.assign(this, defaults, overrides);\n    this._modals = [];\n    this._documentKeydownHandlerWasAdded = false;\n\n    this.handleEvent = evt => {\n      switch (evt.type) {\n        case 'keydown':\n          Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"isEscapePressEvent\"])(evt, this.closeAfterAnnimationEnd.bind(this));\n          break;\n      }\n    }; // открытие по клику\n\n\n    document.addEventListener('click', evt => {\n      const triggerElement = evt.target.closest('[' + this.triggerDataAttributeName + ']');\n      if (!triggerElement) return;\n      evt.preventDefault();\n\n      const _getHomelandPosition = modalContentElement => {\n        return {\n          parentElement: modalContentElement.parentElement,\n          nextElement: modalContentElement.nextElementSibling\n        };\n      };\n\n      const modalContentSelector = triggerElement.getAttribute(this.triggerDataAttributeName);\n      const modalContentElement = document.querySelector(modalContentSelector);\n\n      const homelandPosition = _getHomelandPosition(modalContentElement); // сохранение позиции в DOM, из которой будет выдернут HTML внутренностей окна\n\n\n      const modalParams = {\n        content: modalContentElement,\n        modalPosition: triggerElement.dataset[this.modalTypeDataAttribute],\n        modalSize: triggerElement.dataset[this.modalSizeDataAttribute],\n        callbackOnClose: () => {\n          // возвращаем внутренности на первоначальную позицию\n          let {\n            parentElement,\n            nextElement\n          } = homelandPosition;\n          parentElement.insertBefore(modalContentElement, nextElement);\n        },\n        triggerElement: triggerElement\n      };\n      this.open(modalParams);\n    });\n  }\n\n  open({\n    content,\n    modalPosition = this.defaultPosition,\n    modalSize,\n    callbackOnClose,\n    triggerElement\n  }) {\n    const _cloneModalTemplate = () => {\n      return document.querySelector(this.modalTemplateSelector).content.querySelector(this.modalBodySelector).cloneNode(true);\n    };\n\n    const _transformContent = content => {\n      let element = document.createElement('div');\n      element.classList.add(this.contentModalClass);\n      element.innerHTML = content;\n      return element;\n    };\n\n    const _addPositionClass = currentModal => {\n      currentModal._modalElement.classList.add(ModalPositionClasses[modalPosition]);\n    };\n\n    const _addSizeClass = currentModal => {\n      if (modalSize) {\n        currentModal._modalElement.classList.add(ModalSizeClasses[modalSize]);\n      }\n    };\n\n    const _changeAriaAttrIfNeeded = currentModal => {\n      if (currentModal._modalContentElement.getAttribute('aria-hidden')) {\n        currentModal._modalContentElement.setAttribute('aria-hidden', false);\n\n        currentModal._ariaAttrWasRemoved = true;\n      }\n    };\n\n    const addOverlay = currentModal => {\n      currentModal._overlayElement = document.createElement('div');\n\n      currentModal._overlayElement.classList.add(this.overlaySelector);\n\n      currentModal._overlayElement.classList.add(this.modalOverlaySelector);\n\n      currentModal._modalElement.append(currentModal._overlayElement);\n    };\n\n    const _show = currentModal => {\n      if (currentModal._modalContentElement.classList.contains(this.closeModalClass)) {\n        currentModal._modalContentElement.classList.remove(this.closeModalClass);\n\n        currentModal._closedClassWasRemoved = true;\n      } else {\n        // у него нет класса закрытия (модальное расположено в контенте)\n        // могут быть проблемы, если надо flex или grid.\n        // При необходимости добавить значение по умолчанию и указание необходимого стиля в data атрибуте\n        currentModal._modalContentElement.style.display = 'block';\n      }\n    };\n\n    const _addHandlers = currentModal => {\n      const closeHandler = () => {\n        this.closeAfterAnnimationEnd();\n      };\n\n      let closeButtonElement = currentModal._modalElement.querySelector(this.closeButtonSelector);\n\n      closeButtonElement.addEventListener('click', closeHandler);\n\n      currentModal._overlayElement.addEventListener('click', closeHandler); // обработчик на закрытие по Esc - один на все открытые окна\n\n\n      if (!this._documentKeydownHandlerWasAdded) {\n        document.addEventListener('keydown', this); // см this.handleEvent\n\n        this._documentKeydownHandlerWasAdded = true;\n      }\n    };\n\n    this._modals.push({});\n\n    let currentModal = this._modals[this._getLastModalIndex()];\n\n    currentModal._modalElement = _cloneModalTemplate();\n    currentModal._modalContentElement = typeof content === 'object' ? content : _transformContent(content); // currentModal._modalContentElement = _transformContent(content);\n\n    currentModal._triggerElement = triggerElement;\n    currentModal._callbackOnClose = callbackOnClose;\n\n    _addPositionClass(currentModal);\n\n    _addSizeClass(currentModal);\n\n    _changeAriaAttrIfNeeded(currentModal);\n\n    currentModal._modalElement.children[0].prepend(currentModal._modalContentElement);\n\n    addOverlay(currentModal);\n    document.body.append(currentModal._modalElement);\n\n    _show(currentModal);\n\n    _addHandlers(currentModal); // блокируем только на первом окне\n\n\n    if (this._modals.length === 1) {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: true\n      });\n    }\n\n    this._focus(currentModal, {\n      shouldBeInside: true\n    });\n  }\n\n  closeAfterAnnimationEnd() {\n    const currentModal = this._modals[this._getLastModalIndex()];\n\n    Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"executeAfterAnimationEnd\"])({\n      element: currentModal._modalElement,\n      animationClass: this.animationOnCloseClass,\n      animationName: this.animationOnCloseName,\n      callback: this._close.bind(this)\n    });\n  }\n\n  _close() {\n    const _removeHandlers = () => {\n      // удаляем обработчик по keydown только если закрывается единственное окно\n      if (this._modals.length === 1) {\n        document.removeEventListener('keydown', this);\n        this._documentKeydownHandlerWasAdded = false;\n      }\n    };\n\n    let currentModal = this._modals[this._getLastModalIndex()];\n\n    currentModal._modalContentElement.style.display = '';\n\n    if (currentModal._closedClassWasRemoved) {\n      currentModal._modalContentElement.classList.add(this.closeModalClass);\n    }\n\n    if (currentModal._ariaAttrWasRemoved) {\n      currentModal._modalContentElement.setAttribute('aria-hidden', true);\n    }\n\n    if (currentModal._callbackOnClose) currentModal._callbackOnClose();\n\n    currentModal._modalElement.remove();\n\n    _removeHandlers();\n\n    this._modals.pop();\n\n    if (this._modals.length === 0) {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: false\n      });\n    }\n\n    this._focus(currentModal, {\n      shouldBeInside: false\n    });\n  }\n\n  _getLastModalIndex() {\n    return this._modals.length - 1;\n  }\n\n  _focus(currentModal, {\n    shouldBeInside\n  }) {\n    // Метод переносит фокус с элемента открывающего окно\n    // в само окно, и обратно, когда окно закрывается\n    if (shouldBeInside) {\n      const nodes = currentModal._modalElement.querySelectorAll(this.focusElements);\n\n      if (nodes.length) nodes[0].focus();\n    } else {\n      if (currentModal._triggerElement) {\n        currentModal._triggerElement.focus();\n      }\n    }\n  }\n\n}\n\nfunction initModal() {\n  return new Modal();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/modal/_modal.js\n");

/***/ }),

/***/ "./source/sass/blocks/pickup/_pickup.js":
/*!**********************************************!*\
  !*** ./source/sass/blocks/pickup/_pickup.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\nconst MAIN_SELECTOR = '.pickup';\nconst COORDS_ELEMENT_SELECTOR = '.radiocheck__input';\nconst COORDS_DATA_ATTR_NAME = 'pickupCoords';\nconst COORDS_DEVIDER = ',';\nconst MAP_SRC = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU&amp;apikey=43f5c4bd-e478-41db-b3c6-29fbb56b4380';\nconst MAP_ID = 'map';\nconst MAP_CLASS = 'pickup__map';\nconst PIN_COLOR = '#01768b';\n\nclass Pickup {\n  constructor(element) {\n    this.element = element;\n    this.mapElement = undefined;\n    this.map = undefined;\n    this.coords = this._readCoords(); // прочитаем координаты из разметки и запишем в массив\n\n    this._loadMap(() => {\n      this._createMapElement();\n\n      let activeIndex = this.element.querySelector(':checked').dataset.id;\n      let startingCenterCoords = this.coords[activeIndex];\n\n      this._initMap(startingCenterCoords);\n\n      this._addPlacemarks(this.coords);\n    });\n\n    this.element.addEventListener('change', evt => {\n      let newCoord = this.coords[evt.target.dataset.id];\n      this.map.panTo(newCoord, {\n        flying: 1\n      });\n    });\n  }\n\n  _loadMap(initCallback) {\n    let script = document.createElement('script');\n    script.src = MAP_SRC;\n    document.body.append(script);\n\n    script.onload = () => {\n      window.ymaps.ready(initCallback);\n    };\n  }\n\n  _createMapElement() {\n    this.mapElement = document.createElement('div');\n    this.mapElement.id = MAP_ID;\n    this.mapElement.classList.add(MAP_CLASS);\n    this.element.append(this.mapElement);\n  }\n\n  _initMap(centerCoords) {\n    this.map = new window.ymaps.Map(MAP_ID, {\n      center: centerCoords,\n      zoom: 14,\n      controls: ['zoomControl', 'fullscreenControl'] // controls: ['smallMapDefaultSet']\n\n    });\n  }\n\n  _readCoords() {\n    let coords = [];\n    let coordElements = this.element.querySelectorAll(COORDS_ELEMENT_SELECTOR);\n\n    for (let i = 0; i < coordElements.length; i++) {\n      // получение координат и преобразование в массив массивов\n      let textCoords = coordElements[i].dataset[COORDS_DATA_ATTR_NAME];\n      let deviderPosition = textCoords.indexOf(COORDS_DEVIDER);\n      let coordX = +textCoords.slice(0, deviderPosition);\n      let coordY = +textCoords.slice(deviderPosition + 1);\n      coords.push([coordX, coordY]);\n      coordElements[i].setAttribute('data-id', i);\n    }\n\n    return coords;\n  }\n\n  _addPlacemarks(coords) {\n    let placemark;\n    coords.forEach(coord => {\n      placemark = new window.ymaps.Placemark(coord, {}, {\n        preset: 'islands#dotIcon',\n        iconColor: PIN_COLOR\n      });\n      this.map.geoObjects.add(placemark);\n    });\n  }\n\n}\n\nfunction initPickup() {\n  let pickupElement = document.querySelector(MAIN_SELECTOR);\n\n  if (pickupElement) {\n    return new Pickup(pickupElement);\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initPickup);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/pickup/_pickup.js\n");

/***/ }),

/***/ "./source/sass/blocks/quantity-input/_quantity-input.js":
/*!**************************************************************!*\
  !*** ./source/sass/blocks/quantity-input/_quantity-input.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass QuantityInput {\n  constructor(overrides) {\n    const defaults = {\n      buttonSelector: '.quantity-input__button',\n      buttonMoreClass: 'quantity-input__button--more'\n    };\n    Object.assign(this, defaults, overrides);\n\n    if (document.querySelector(this.buttonSelector)) {\n      this._init();\n    }\n  }\n\n  _init() {\n    document.addEventListener('click', evt => {\n      let target = evt.target.closest(this.buttonSelector);\n      if (!target) return;\n\n      if (target.classList.contains(this.buttonMoreClass)) {\n        target.previousElementSibling.value++;\n      } else {\n        if (target.nextElementSibling.value <= 1) return;\n        target.nextElementSibling.value--;\n      }\n    });\n  }\n\n}\n\nfunction initQuantityInput() {\n  return new QuantityInput();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initQuantityInput);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvcXVhbnRpdHktaW5wdXQvX3F1YW50aXR5LWlucHV0LmpzPzY0MzQiXSwibmFtZXMiOlsiUXVhbnRpdHlJbnB1dCIsImNvbnN0cnVjdG9yIiwib3ZlcnJpZGVzIiwiZGVmYXVsdHMiLCJidXR0b25TZWxlY3RvciIsImJ1dHRvbk1vcmVDbGFzcyIsIk9iamVjdCIsImFzc2lnbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIl9pbml0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsInRhcmdldCIsImNsb3Nlc3QiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJ2YWx1ZSIsIm5leHRFbGVtZW50U2libGluZyIsImluaXRRdWFudGl0eUlucHV0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQU1BLGFBQU4sQ0FBb0I7QUFDbEJDLGFBQVcsQ0FBQ0MsU0FBRCxFQUFZO0FBRXJCLFVBQU1DLFFBQVEsR0FBRztBQUNmQyxvQkFBYyxFQUFFLHlCQUREO0FBRWZDLHFCQUFlLEVBQUU7QUFGRixLQUFqQjtBQUtBQyxVQUFNLENBQUNDLE1BQVAsQ0FBYyxJQUFkLEVBQW9CSixRQUFwQixFQUE4QkQsU0FBOUI7O0FBRUEsUUFBSU0sUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQUtMLGNBQTVCLENBQUosRUFBaUQ7QUFDL0MsV0FBS00sS0FBTDtBQUNEO0FBQ0Y7O0FBR0RBLE9BQUssR0FBRztBQUNORixZQUFRLENBQUNHLGdCQUFULENBQTBCLE9BQTFCLEVBQW9DQyxHQUFELElBQVM7QUFDMUMsVUFBSUMsTUFBTSxHQUFHRCxHQUFHLENBQUNDLE1BQUosQ0FBV0MsT0FBWCxDQUFtQixLQUFLVixjQUF4QixDQUFiO0FBRUEsVUFBSSxDQUFDUyxNQUFMLEVBQWE7O0FBRWIsVUFBSUEsTUFBTSxDQUFDRSxTQUFQLENBQWlCQyxRQUFqQixDQUEwQixLQUFLWCxlQUEvQixDQUFKLEVBQXFEO0FBQ25EUSxjQUFNLENBQUNJLHNCQUFQLENBQThCQyxLQUE5QjtBQUNELE9BRkQsTUFFTztBQUNMLFlBQUlMLE1BQU0sQ0FBQ00sa0JBQVAsQ0FBMEJELEtBQTFCLElBQW1DLENBQXZDLEVBQTBDO0FBQzFDTCxjQUFNLENBQUNNLGtCQUFQLENBQTBCRCxLQUExQjtBQUNEO0FBQ0YsS0FYRDtBQVlEOztBQTdCaUI7O0FBaUNwQixTQUFTRSxpQkFBVCxHQUE2QjtBQUMzQixTQUFPLElBQUlwQixhQUFKLEVBQVA7QUFDRDs7QUFFY29CLGdGQUFmIiwiZmlsZSI6Ii4vc291cmNlL3Nhc3MvYmxvY2tzL3F1YW50aXR5LWlucHV0L19xdWFudGl0eS1pbnB1dC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFF1YW50aXR5SW5wdXQge1xuICBjb25zdHJ1Y3RvcihvdmVycmlkZXMpIHtcblxuICAgIGNvbnN0IGRlZmF1bHRzID0ge1xuICAgICAgYnV0dG9uU2VsZWN0b3I6ICcucXVhbnRpdHktaW5wdXRfX2J1dHRvbicsXG4gICAgICBidXR0b25Nb3JlQ2xhc3M6ICdxdWFudGl0eS1pbnB1dF9fYnV0dG9uLS1tb3JlJ1xuICAgIH07XG5cbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGRlZmF1bHRzLCBvdmVycmlkZXMpO1xuXG4gICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5idXR0b25TZWxlY3RvcikpIHtcbiAgICAgIHRoaXMuX2luaXQoKTtcbiAgICB9XG4gIH1cblxuXG4gIF9pbml0KCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgbGV0IHRhcmdldCA9IGV2dC50YXJnZXQuY2xvc2VzdCh0aGlzLmJ1dHRvblNlbGVjdG9yKTtcblxuICAgICAgaWYgKCF0YXJnZXQpIHJldHVybjtcblxuICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnModGhpcy5idXR0b25Nb3JlQ2xhc3MpKSB7XG4gICAgICAgIHRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLnZhbHVlKys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodGFyZ2V0Lm5leHRFbGVtZW50U2libGluZy52YWx1ZSA8PSAxKSByZXR1cm47XG4gICAgICAgIHRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmcudmFsdWUtLTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIGluaXRRdWFudGl0eUlucHV0KCkge1xuICByZXR1cm4gbmV3IFF1YW50aXR5SW5wdXQoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5pdFF1YW50aXR5SW5wdXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./source/sass/blocks/quantity-input/_quantity-input.js\n");

/***/ }),

/***/ "./source/sass/blocks/radiocheck/_radio.js":
/*!*************************************************!*\
  !*** ./source/sass/blocks/radiocheck/_radio.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// модуль устанавливает значение атрибуту data-checked  родителю input (в моем случае элементу label)\n// в зависимости от состояния checked у внутреннего input\n//  <label class=\"radiocheck\" data-checked=\"true\" || \"false\">\n//    <input class=\"radiocheck__input visually-hidden\" type=\"radio\" data-parent-checked name=\"radio-pickup\" value=\"1\" checked>\n//    <span class=\"radiocheck__box radiocheck__box--radio\"></span>\n//    <span span class=\"radiocheck__caption\">Самовывоз - метро Спортивная</span>\n//  </label>\n// Это может быть полезно для стилизации следующих за radiocheck элементов\n// например:\n// .delivery__pickup-radio[data-checked=\"false\"] + .delivery__pickup-info {\n//   display: none;\n// }\n// Активация по наличию атрибута data-parent-check у input(radio)\n// ! Устанавливать data-атрибут только одному элементу в группе!\nconst DATA_ATTR_NAME = 'data-checked';\n\nclass Radio {\n  constructor(radioInputName) {\n    const radioInputSelector = \"input[name=\\\"\".concat(radioInputName, \"\\\"]\");\n    this.inputElements = Array.from(document.querySelectorAll(radioInputSelector));\n\n    this._updateCheckedAttributes();\n\n    this.inputElements.forEach(inputElement => {\n      inputElement.addEventListener('change', () => {\n        this._updateCheckedAttributes();\n      });\n    });\n  }\n\n  _updateCheckedAttributes() {\n    this.inputElements.forEach(elem => {\n      elem.parentElement.setAttribute(DATA_ATTR_NAME, elem.checked);\n    });\n  }\n\n}\n\nconst DATA_ATTR_SELECTOR = '[data-parent-check]';\n\nfunction initRadios() {\n  const radioInputs = Array.from(document.querySelectorAll(DATA_ATTR_SELECTOR));\n  const radios = radioInputs.map(elem => new Radio(elem.name));\n  return radios;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initRadios);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvcmFkaW9jaGVjay9fcmFkaW8uanM/ZjQ4YiJdLCJuYW1lcyI6WyJEQVRBX0FUVFJfTkFNRSIsIlJhZGlvIiwiY29uc3RydWN0b3IiLCJyYWRpb0lucHV0TmFtZSIsInJhZGlvSW5wdXRTZWxlY3RvciIsImlucHV0RWxlbWVudHMiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfdXBkYXRlQ2hlY2tlZEF0dHJpYnV0ZXMiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImVsZW0iLCJwYXJlbnRFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiY2hlY2tlZCIsIkRBVEFfQVRUUl9TRUxFQ1RPUiIsImluaXRSYWRpb3MiLCJyYWRpb0lucHV0cyIsInJhZGlvcyIsIm1hcCIsIm5hbWUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBLE1BQU1BLGNBQWMsR0FBRyxjQUF2Qjs7QUFFQSxNQUFNQyxLQUFOLENBQWE7QUFDWEMsYUFBVyxDQUFDQyxjQUFELEVBQWlCO0FBQzFCLFVBQU1DLGtCQUFrQiwwQkFBbUJELGNBQW5CLFFBQXhCO0FBQ0EsU0FBS0UsYUFBTCxHQUFxQkMsS0FBSyxDQUFDQyxJQUFOLENBQVdDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEJMLGtCQUExQixDQUFYLENBQXJCOztBQUNBLFNBQUtNLHdCQUFMOztBQUNBLFNBQUtMLGFBQUwsQ0FBbUJNLE9BQW5CLENBQTJCQyxZQUFZLElBQUk7QUFDekNBLGtCQUFZLENBQUNDLGdCQUFiLENBQThCLFFBQTlCLEVBQXdDLE1BQU07QUFDNUMsYUFBS0gsd0JBQUw7QUFDRCxPQUZEO0FBR0QsS0FKRDtBQUtEOztBQUVEQSwwQkFBd0IsR0FBRztBQUN6QixTQUFLTCxhQUFMLENBQW1CTSxPQUFuQixDQUEyQkcsSUFBSSxJQUFJO0FBQ2pDQSxVQUFJLENBQUNDLGFBQUwsQ0FBbUJDLFlBQW5CLENBQWdDaEIsY0FBaEMsRUFBZ0RjLElBQUksQ0FBQ0csT0FBckQ7QUFDRCxLQUZEO0FBR0Q7O0FBaEJVOztBQXFCYixNQUFNQyxrQkFBa0IsR0FBRyxxQkFBM0I7O0FBRUEsU0FBU0MsVUFBVCxHQUFzQjtBQUNwQixRQUFNQyxXQUFXLEdBQUdkLEtBQUssQ0FBQ0MsSUFBTixDQUFXQyxRQUFRLENBQUNDLGdCQUFULENBQTBCUyxrQkFBMUIsQ0FBWCxDQUFwQjtBQUNBLFFBQU1HLE1BQU0sR0FBR0QsV0FBVyxDQUFDRSxHQUFaLENBQWlCUixJQUFELElBQVUsSUFBSWIsS0FBSixDQUFVYSxJQUFJLENBQUNTLElBQWYsQ0FBMUIsQ0FBZjtBQUNBLFNBQU9GLE1BQVA7QUFDRDs7QUFFY0YseUVBQWYiLCJmaWxlIjoiLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvcmFkaW9jaGVjay9fcmFkaW8uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyDQvNC+0LTRg9C70Ywg0YPRgdGC0LDQvdCw0LLQu9C40LLQsNC10YIg0LfQvdCw0YfQtdC90LjQtSDQsNGC0YDQuNCx0YPRgtGDIGRhdGEtY2hlY2tlZCAg0YDQvtC00LjRgtC10LvRjiBpbnB1dCAo0LIg0LzQvtC10Lwg0YHQu9GD0YfQsNC1INGN0LvQtdC80LXQvdGC0YMgbGFiZWwpXG4vLyDQsiDQt9Cw0LLQuNGB0LjQvNC+0YHRgtC4INC+0YIg0YHQvtGB0YLQvtGP0L3QuNGPIGNoZWNrZWQg0YMg0LLQvdGD0YLRgNC10L3QvdC10LPQviBpbnB1dFxuXG4vLyAgPGxhYmVsIGNsYXNzPVwicmFkaW9jaGVja1wiIGRhdGEtY2hlY2tlZD1cInRydWVcIiB8fCBcImZhbHNlXCI+XG4vLyAgICA8aW5wdXQgY2xhc3M9XCJyYWRpb2NoZWNrX19pbnB1dCB2aXN1YWxseS1oaWRkZW5cIiB0eXBlPVwicmFkaW9cIiBkYXRhLXBhcmVudC1jaGVja2VkIG5hbWU9XCJyYWRpby1waWNrdXBcIiB2YWx1ZT1cIjFcIiBjaGVja2VkPlxuLy8gICAgPHNwYW4gY2xhc3M9XCJyYWRpb2NoZWNrX19ib3ggcmFkaW9jaGVja19fYm94LS1yYWRpb1wiPjwvc3Bhbj5cbi8vICAgIDxzcGFuIHNwYW4gY2xhc3M9XCJyYWRpb2NoZWNrX19jYXB0aW9uXCI+0KHQsNC80L7QstGL0LLQvtC3IC0g0LzQtdGC0YDQviDQodC/0L7RgNGC0LjQstC90LDRjzwvc3Bhbj5cbi8vICA8L2xhYmVsPlxuXG4vLyDQrdGC0L4g0LzQvtC20LXRgiDQsdGL0YLRjCDQv9C+0LvQtdC30L3QviDQtNC70Y8g0YHRgtC40LvQuNC30LDRhtC40Lgg0YHQu9C10LTRg9GO0YnQuNGFINC30LAgcmFkaW9jaGVjayDRjdC70LXQvNC10L3RgtC+0LJcbi8vINC90LDQv9GA0LjQvNC10YA6XG4vLyAuZGVsaXZlcnlfX3BpY2t1cC1yYWRpb1tkYXRhLWNoZWNrZWQ9XCJmYWxzZVwiXSArIC5kZWxpdmVyeV9fcGlja3VwLWluZm8ge1xuLy8gICBkaXNwbGF5OiBub25lO1xuLy8gfVxuXG4vLyDQkNC60YLQuNCy0LDRhtC40Y8g0L/QviDQvdCw0LvQuNGH0LjRjiDQsNGC0YDQuNCx0YPRgtCwIGRhdGEtcGFyZW50LWNoZWNrINGDIGlucHV0KHJhZGlvKVxuLy8gISDQo9GB0YLQsNC90LDQstC70LjQstCw0YLRjCBkYXRhLdCw0YLRgNC40LHRg9GCINGC0L7Qu9GM0LrQviDQvtC00L3QvtC80YMg0Y3Qu9C10LzQtdC90YLRgyDQsiDQs9GA0YPQv9C/0LUhXG5cblxuY29uc3QgREFUQV9BVFRSX05BTUUgPSAnZGF0YS1jaGVja2VkJztcblxuY2xhc3MgUmFkaW8gIHtcbiAgY29uc3RydWN0b3IocmFkaW9JbnB1dE5hbWUpIHtcbiAgICBjb25zdCByYWRpb0lucHV0U2VsZWN0b3IgID0gYGlucHV0W25hbWU9XCIke3JhZGlvSW5wdXROYW1lfVwiXWA7XG4gICAgdGhpcy5pbnB1dEVsZW1lbnRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHJhZGlvSW5wdXRTZWxlY3RvcikpO1xuICAgIHRoaXMuX3VwZGF0ZUNoZWNrZWRBdHRyaWJ1dGVzKCk7XG4gICAgdGhpcy5pbnB1dEVsZW1lbnRzLmZvckVhY2goaW5wdXRFbGVtZW50ID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX3VwZGF0ZUNoZWNrZWRBdHRyaWJ1dGVzKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF91cGRhdGVDaGVja2VkQXR0cmlidXRlcygpIHtcbiAgICB0aGlzLmlucHV0RWxlbWVudHMuZm9yRWFjaChlbGVtID0+IHtcbiAgICAgIGVsZW0ucGFyZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoREFUQV9BVFRSX05BTUUsIGVsZW0uY2hlY2tlZCk7XG4gICAgfSk7XG4gIH1cbn1cblxuXG5cbmNvbnN0IERBVEFfQVRUUl9TRUxFQ1RPUiA9ICdbZGF0YS1wYXJlbnQtY2hlY2tdJztcblxuZnVuY3Rpb24gaW5pdFJhZGlvcygpIHtcbiAgY29uc3QgcmFkaW9JbnB1dHMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoREFUQV9BVFRSX1NFTEVDVE9SKSk7XG4gIGNvbnN0IHJhZGlvcyA9IHJhZGlvSW5wdXRzLm1hcCgoZWxlbSkgPT4gbmV3IFJhZGlvKGVsZW0ubmFtZSkpO1xuICByZXR1cm4gcmFkaW9zO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbml0UmFkaW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/sass/blocks/radiocheck/_radio.js\n");

/***/ }),

/***/ "./source/sass/blocks/ripple/_ripple.js":
/*!**********************************************!*\
  !*** ./source/sass/blocks/ripple/_ripple.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\nconst RIPPLE_CLASSNAME = 'ripple';\nconst RIPPLE_BEFORE_MOD_CLASSNAME = 'ripple--before';\nconst RIPPLE_AFTER_MOD_CLASSNAME = 'ripple--after';\n\nclass Ripple {\n  constructor(overrides) {\n    let defaults = {\n      selectors: ['button'],\n      activationEventTypes: ['mousedown', 'keydown'],\n      startScale: 0.6,\n      // начальный размер ripple от максимальной стороны контейнера -> используется для расчета rippleSize\n      padding: 10,\n      opacity: 0.12,\n      lastAnimationName: 'ripple-opacity-out'\n    };\n    Object.assign(this, defaults, overrides);\n    this.rippleActiveModClassName = RIPPLE_AFTER_MOD_CLASSNAME;\n    this.activationEventTypes.forEach(eventType => {\n      document.addEventListener(eventType, evt => {\n        switch (evt.type) {\n          case 'mousedown':\n            if (evt.which === 1) {\n              this._activateHandler(evt);\n            }\n\n            break;\n\n          case 'keydown':\n            if (evt.key === 'Enter') {\n              evt.ripplePositionInCenter = true;\n\n              this._activateHandler(evt);\n            }\n\n            break;\n\n          default:\n            this._activateHandler(evt);\n\n        }\n      });\n    });\n  }\n\n  _activateHandler(evt) {\n    this.selectors.some(selector => {\n      let target = evt.target.closest(selector);\n      if (!target) return false; // если предыдущая анимация не закончилась, принудительно завершим\n\n      if (target.classList.contains(RIPPLE_CLASSNAME)) {\n        this._endExecution(target);\n      } // если у элемента есть after, проверяем существует ли before, если да - отменяем запуск\n\n\n      let targetCoputedStyle = getComputedStyle(target, '::after');\n\n      if (targetCoputedStyle.content !== 'none') {\n        targetCoputedStyle = getComputedStyle(target, '::before');\n\n        if (targetCoputedStyle.content === 'none') {\n          this.rippleActiveModClassName = RIPPLE_BEFORE_MOD_CLASSNAME;\n        } else {\n          return false;\n        }\n      } // если у элемента уже установлено абсолютное или фиксированное позиционирование,\n      // продублируем его разметке, что бы он не переопределился на relative\n\n\n      targetCoputedStyle = getComputedStyle(target);\n      let currentPosition = targetCoputedStyle.position;\n\n      if (currentPosition === 'absolute' || currentPosition === 'fixed') {\n        target.style.position = currentPosition;\n      }\n\n      let rippleSize = this._getSize(target);\n\n      let translationCoordinates = this._getTranslationCoordinates(evt, target, rippleSize);\n\n      let scale = this._getScale(target, rippleSize);\n\n      target.style.setProperty('--size', rippleSize + 'px');\n      target.style.setProperty('--startTranslate', \"\".concat(translationCoordinates.startPointX, \"px,\\n         \").concat(translationCoordinates.startPointY, \"px\"));\n      target.style.setProperty('--endTranslate', \"\".concat(translationCoordinates.endPointX, \"px,\\n         \").concat(translationCoordinates.endPointY, \"px\"));\n      target.style.setProperty('--endScale', scale);\n      target.style.setProperty('--opacity', this.opacity);\n      target.classList.add(RIPPLE_CLASSNAME);\n      target.classList.add(this.rippleActiveModClassName);\n      target.addEventListener('animationend', evt => {\n        if (evt.animationName !== this.lastAnimationName) return;\n\n        this._endExecution(target);\n      });\n      return true;\n    });\n  }\n\n  _endExecution(rippleElement) {\n    rippleElement.classList.remove(RIPPLE_CLASSNAME);\n    rippleElement.classList.remove(this.rippleActiveModClassName);\n  }\n\n  _getSize(target) {\n    return Math.floor(this.startScale * Math.max(target.clientWidth, target.clientHeight));\n  }\n\n  _getTranslationCoordinates(evt, target, rippleSize) {\n    let resultCoordinates = {};\n    let startPointX;\n    let startPointY;\n    let rect = target.getBoundingClientRect();\n\n    if (evt.ripplePositionInCenter) {\n      startPointX = rect.width / 2 - rippleSize / 2;\n      startPointY = rect.height / 2 - rippleSize / 2;\n    } else {\n      startPointX = evt.clientX - rect.x - rippleSize / 2;\n      startPointY = evt.clientY - rect.y - rippleSize / 2;\n    }\n\n    resultCoordinates = {\n      startPointX: startPointX,\n      startPointY: startPointY,\n      endPointX: rect.width / 2 - rippleSize / 2,\n      endPointY: rect.height / 2 - rippleSize / 2\n    };\n    return resultCoordinates;\n  }\n\n  _getScale(target, rippleSize) {\n    let hypotenuse = Math.sqrt(Math.pow(target.clientWidth, 2) + Math.pow(target.clientHeight, 2));\n    let maxRadius = hypotenuse + this.padding;\n    return maxRadius / rippleSize;\n  }\n\n}\n\nfunction initRipple() {\n  const rippleConfig = {\n    selectors: ['a[href]', 'button:not(.button--modal-close)', '.chip-set__box', '.radio-tabs__label']\n  };\n  return new Ripple(rippleConfig);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initRipple);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/ripple/_ripple.js\n");

/***/ }),

/***/ "./source/sass/blocks/showmore/_showmore.js":
/*!**************************************************!*\
  !*** ./source/sass/blocks/showmore/_showmore.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/util.js */ \"./source/js/util.js\");\n\n\n\nconst SHOW_TEXT_DATA_ATTR = 'showmoreShowtext';\nconst HIDE_TEXT_DATA_ATTR = 'showmoreHidetext';\nconst NODES_QUANTITY_DATA_ATTR = 'showmoreNodes';\nconst COLLAPSED_HEIGHT_DATA_ATTR = 'showmoreHeight';\nconst BUTTON_CLASS_DATA_ATTR = 'showmoreButtonClass';\nconst BUTTON_HTML = \"<button class=\\\"showmore__button link\\\" aria-expanded=\\\"false\\\" type=\\\"button\\\">\\n                      <svg class=\\\"showmore__button-icon\\\" width=\\\"32\\\" height=\\\"32\\\">\\n                        <use href=\\\"img/svg/_sprite.svg#icon-arrow\\\"></use>\\n                      </svg>\\n                    </button>\";\n\nclass ShowmoreButton {\n  constructor(mainElement) {\n    let defaults = {\n      // buttonTextClass: 'showmore__button-text',\n      showText: mainElement.dataset[SHOW_TEXT_DATA_ATTR] || 'Показать больше',\n      hideText: mainElement.dataset[HIDE_TEXT_DATA_ATTR] || 'Скрыть',\n      additionalClass: mainElement.dataset[BUTTON_CLASS_DATA_ATTR]\n    };\n    Object.assign(this, defaults);\n\n    this._createButton();\n  }\n\n  _createButton() {\n    let buttonContainerElement = document.createElement('div');\n    buttonContainerElement.innerHTML = BUTTON_HTML;\n    this.element = buttonContainerElement.firstChild;\n\n    if (this.additionalClass) {\n      this._addAdditionalClasses();\n    }\n\n    this.caption = document.createElement('span'); // this.caption.classList.add(this.buttonTextClass);\n\n    this.caption.innerText = this.showText;\n    this.element.prepend(this.caption);\n  }\n\n  _addAdditionalClasses() {\n    let additionalClasses = this.additionalClass.split(' ');\n\n    if (Array.isArray(additionalClasses)) {\n      additionalClasses.forEach(elem => {\n        this.element.classList.add(elem);\n      });\n    }\n  }\n\n  changeState({\n    isExpanded\n  }) {\n    this.element.setAttribute('aria-expanded', isExpanded);\n    isExpanded ? this.caption.innerText = this.hideText : this.caption.innerText = this.showText;\n  }\n\n}\n\nclass Showmore {\n  constructor(element) {\n    const defaults = {};\n    Object.assign(this, defaults);\n    this.stateIsExpanded = false;\n    this.element = element;\n    this.button = null;\n  }\n\n  _createButton() {\n    this.button = new ShowmoreButton(this.element);\n  }\n\n  _insertButton() {\n    this.element.after(this.button.element);\n  }\n\n}\n\nclass ShowmoreNodes extends Showmore {\n  constructor(element) {\n    super(element);\n    const defaults = {\n      alwaysVisibleNodeQuantity: element.dataset[NODES_QUANTITY_DATA_ATTR] || 2\n    };\n    Object.assign(this, defaults);\n\n    if (this._toggleNodes({\n      isHidden: true\n    })) {\n      super._createButton();\n\n      super._insertButton();\n\n      this.button.element.addEventListener('click', this._onButtonClick.bind(this));\n    }\n  }\n\n  _toggleNodes({\n    isHidden\n  }) {\n    let counter = 0;\n    let itemElements = this.element.children;\n\n    for (let i = this.alwaysVisibleNodeQuantity; i < itemElements.length; i++) {\n      itemElements[i].hidden = isHidden;\n      counter++;\n    }\n\n    return counter;\n  }\n\n  _onButtonClick() {\n    this.stateIsExpanded ? this._hideNodes() : this._showNodes();\n  }\n\n  _showNodes() {\n    this.element.addEventListener('transitionend', () => {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: false\n      });\n      this.element.style.height = 'auto';\n      this.element.style.overflow = '';\n    }, {\n      once: true\n    }); // сохраним высоту для возврата к ней после закрытия\n\n    this.collapsedHeight = this.element.scrollHeight;\n    Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n      lock: true\n    });\n    this.element.style.height = this.element.scrollHeight + 'px';\n    this.element.style.overflow = 'hidden';\n\n    this._toggleNodes({\n      isHidden: false\n    });\n\n    this.element.style.height = this.element.scrollHeight + 'px';\n    this.button.changeState({\n      isExpanded: true\n    });\n    this.stateIsExpanded = true;\n  }\n\n  _hideNodes() {\n    this.element.addEventListener('transitionend', () => {\n      this._toggleNodes({\n        isHidden: true\n      });\n\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: false\n      });\n      this.element.style.height = 'auto';\n      this.element.style.overflow = '';\n      this.element.style.transitionDuration = '';\n    }, {\n      once: true\n    });\n    this.element.style.height = this.element.scrollHeight + 'px';\n    setTimeout(() => {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: true\n      });\n      this.element.style.transitionDuration = '75ms';\n      this.element.style.height = this.collapsedHeight + 'px';\n      this.element.style.overflow = 'hidden';\n    }, 0);\n    this.button.changeState({\n      isExpanded: false\n    });\n    this.stateIsExpanded = false;\n  }\n\n}\n\nclass ShowmoreHeight extends Showmore {\n  constructor(element) {\n    super(element);\n    const defaults = {\n      collapsedHeight: element.dataset[COLLAPSED_HEIGHT_DATA_ATTR] || 226\n    };\n    Object.assign(this, defaults);\n\n    if (this.element.scrollHeight > this.collapsedHeight) {\n      // установливаем мин высоту\n      this.element.style.height = this.collapsedHeight + 'px';\n\n      super._createButton();\n\n      super._insertButton();\n\n      this.button.element.addEventListener('click', () => {\n        this.stateIsExpanded ? this._collapse() : this._show();\n      });\n    }\n  }\n\n  _show() {\n    this.element.addEventListener('transitionend', () => {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: false\n      });\n      this.element.style.height = 'auto';\n    }, {\n      once: true\n    });\n    Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n      lock: true\n    });\n    this.element.style.height = this.element.scrollHeight + 'px';\n    this.button.changeState({\n      isExpanded: true\n    });\n    this.stateIsExpanded = true;\n  }\n\n  _collapse() {\n    this.element.addEventListener('transitionend', () => {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: false\n      });\n      this.element.style.transitionDuration = '';\n    }, {\n      once: true\n    });\n    this.element.style.height = this.element.scrollHeight + 'px';\n    setTimeout(() => {\n      Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"scrollLock\"])({\n        lock: true\n      });\n      this.element.style.transitionDuration = '75ms';\n      this.element.style.height = this.collapsedHeight + 'px';\n    }, 0);\n    this.button.changeState({\n      isExpanded: false\n    });\n    this.stateIsExpanded = false;\n  }\n\n}\n\nconst selector = '[data-showmore]';\nconst actionAttr = 'showmoreAction';\nconst typeDataAttr = {\n  NODE_TYPE: 'hideNodes',\n  HEIGHT_TYPE: 'hideHeight'\n};\nconst typeActions = {\n  [typeDataAttr.NODE_TYPE]: elem => new ShowmoreNodes(elem),\n  [typeDataAttr.HEIGHT_TYPE]: elem => new ShowmoreHeight(elem)\n};\n\nfunction initShowmores() {\n  const elements = Array.from(document.querySelectorAll(selector));\n  const Showmores = elements.map(elem => {\n    return typeActions[elem.dataset[actionAttr]](elem);\n  });\n  return Showmores;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initShowmores);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/showmore/_showmore.js\n");

/***/ }),

/***/ "./source/sass/blocks/slider/_slider.js":
/*!**********************************************!*\
  !*** ./source/sass/blocks/slider/_slider.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/util.js */ \"./source/js/util.js\");\n\n\n\nconst Button = {\n  LEFT: 'Назад',\n  RIGHT: 'Вперед'\n};\nconst ButtonModClasses = {\n  [Button.LEFT]: 'slider__toggle--left',\n  [Button.RIGHT]: 'slider__toggle--right'\n};\n\nfunction getButtonHTML(buttonText) {\n  let buttonModClass = ButtonModClasses[buttonText];\n  return \"<button class=\\\"button slider__toggle \".concat(buttonModClass, \"\\\" type=\\\"button\\\">\\n            <span class=\\\"visually-hidden\\\">\").concat(buttonText, \"</span>\\n            <svg class=\\\"slider__toggle-icon\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" height=\\\"24\\\">\\n              <polyline points=\\\"7,11 12,15 17,11\\\" fill=\\\"none\\\" stroke-linejoin=\\\"round\\\" stroke-linecap=\\\"round\\\" vector-effect=\\\"non-scaling-stroke\\\"/>\\n            </svg>\\n          </button>\");\n}\n\nclass Slider {\n  constructor(element, overrides) {\n    const defaults = {\n      sliderSelector: '.slider',\n      firstSlideModificator: 'slider--first-slide',\n      lastSlideModificator: 'slider--last-slide',\n      listSelector: '.slider__list',\n      itemSelector: '.slider__item',\n      mainNavSelector: '.slider__nav',\n      navItemSelector: '.slider__nav-item',\n      navItemActiveClass: 'slider__nav-item--active',\n      navLinkSelector: '.slider__nav-link',\n      buttonToggleSelector: '.slider__toggle',\n      buttonToggleLeftClass: 'slider__toggle--left',\n      buttonToggleRightClass: 'slider__toggle--right',\n      createToggtleButtons: true\n    };\n    Object.assign(this, defaults, overrides);\n    this.element = element;\n    this.listElement = this.element.querySelector(this.listSelector);\n    this.itemElements = this.element.querySelectorAll(this.itemSelector);\n    this.mainNavElement = this.element.querySelector(this.mainNavSelector);\n\n    if (this.mainNavElement) {\n      this.navItemElements = this.element.querySelectorAll(this.navItemSelector);\n    }\n\n    this.lastIndex = 0; // индекс первого элемента\n\n    this.maxIndex = this.itemElements.length - 1;\n    let itemsMarginWithPx = getComputedStyle(this.itemElements[0]).getPropertyValue('margin-right');\n    this.itemsMargin = +itemsMarginWithPx.slice(0, itemsMarginWithPx.length - 2); // если один слайд - удаляем навигационную панель и выходим\n\n    if (this.maxIndex === 0) {\n      this.mainNavElement.remove();\n      return;\n    }\n\n    if (this.createToggtleButtons && !Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"isTouchDevice\"])()) {\n      this.element.classList.add(this.firstSlideModificator);\n\n      this._createToggleButtons();\n    }\n\n    this._createDataAttrIndex();\n\n    this._createIntersectionObserver({\n      rootElement: this.listElement,\n      targetElements: this.itemElements\n    });\n\n    this.element.addEventListener('click', evt => {\n      const isClickWasOnNavItem = () => {\n        // вылавливаем клик по навигационной ссылке => перелистываем\n        let navItemElement = evt.target.closest(this.navItemSelector);\n        if (!navItemElement) return false; // отменяем переход по ссылке\n\n        evt.preventDefault(); // 1. Определяем индекс clicked item и скроллим\n\n        this._scrollSlide(+navItemElement.dataset.index);\n\n        return true;\n      };\n\n      const isClickWasOnToggleButton = () => {\n        let target = evt.target.closest(this.buttonToggleSelector);\n        if (!target) return false;\n        let targetIndex = this.lastIndex;\n        target.classList.contains(this.buttonToggleLeftClass) ? targetIndex += -1 : targetIndex += 1;\n\n        this._scrollSlide(targetIndex);\n      };\n\n      if (this.mainNavElement) {\n        if (isClickWasOnNavItem()) return;\n      }\n\n      if (this.createToggtleButtons) {\n        isClickWasOnToggleButton();\n      }\n    });\n    this.element.addEventListener('slideIn', evt => {\n      // замена активной ссылки\n      // Определяем номер активного слайда\n      let targetIndex = +evt.detail.targetElement.dataset.index;\n\n      if (this.mainNavElement) {\n        this._updateNavItems(targetIndex);\n      }\n\n      this.lastIndex = targetIndex;\n    }); // кнопки видны тлько на не тач устройствах\n\n    if (this.createToggtleButtons && !Object(_js_util_js__WEBPACK_IMPORTED_MODULE_0__[\"isTouchDevice\"])()) {\n      this.element.addEventListener('firstSlideIn', this._updateToggleButtons.bind(this, 'hideLeftToggle'));\n      this.element.addEventListener('firstSlideOut', this._updateToggleButtons.bind(this, 'showLeftToggle'));\n      this.element.addEventListener('lastSlideIn', this._updateToggleButtons.bind(this, 'hideRightToggle'));\n      this.element.addEventListener('lastSlideOut', this._updateToggleButtons.bind(this, 'showRightToggle'));\n    }\n  }\n\n  _createToggleButtons() {\n    let setOfButtonsHTML = getButtonHTML(Button.LEFT) + getButtonHTML(Button.RIGHT);\n    this.element.firstElementChild.insertAdjacentHTML('beforeend', setOfButtonsHTML);\n\n    if (this.mainNavElement) {\n      this.mainNavElement.insertAdjacentHTML('afterbegin', setOfButtonsHTML);\n    }\n  }\n\n  _createDataAttrIndex() {\n    for (let i = 0; i < this.itemElements.length; i++) {\n      this.itemElements[i].dataset.index = i;\n\n      if (this.mainNavElement) {\n        this.navItemElements[i].dataset.index = i;\n      }\n    }\n  }\n\n  _createIntersectionObserver({\n    rootElement,\n    targetElements\n  }) {\n    const options = {\n      root: rootElement,\n      rootMargin: '0px',\n      // Отступы вокруг root\n      threshold: 0.5 // Число или массив чисел, указывающий, при каком проценте видимости целевого элемента должен сработать callback\n\n    };\n\n    const callback = entries => {\n      entries.forEach(elem => {\n        if (elem.isIntersecting) {\n          let slideIn = new CustomEvent('slideIn', {\n            detail: {\n              targetElement: elem.target\n            }\n          });\n          this.element.dispatchEvent(slideIn);\n\n          if (elem.target.dataset.index === '0') {\n            let firstSlideIn = new CustomEvent('firstSlideIn');\n            this.element.dispatchEvent(firstSlideIn);\n          }\n\n          if (+elem.target.dataset.index === this.maxIndex) {\n            let lastSlideIn = new CustomEvent('lastSlideIn');\n            this.element.dispatchEvent(lastSlideIn);\n          }\n        } else {\n          if (elem.target.dataset.index === '0') {\n            let firstSlideOut = new CustomEvent('firstSlideOut');\n            this.element.dispatchEvent(firstSlideOut);\n          }\n\n          if (+elem.target.dataset.index === this.maxIndex) {\n            let lastSlideOut = new CustomEvent('lastSlideOut');\n            this.element.dispatchEvent(lastSlideOut);\n          }\n        }\n      });\n    };\n\n    var observer = new IntersectionObserver(callback, options);\n    targetElements.forEach(elem => {\n      observer.observe(elem);\n    });\n  }\n\n  _scrollSlide(targetIndex) {\n    // на сколько элементов надо подвинуться? Положительное знач - вперед, отрицательное - назад\n    let indexDiff = targetIndex - this.lastIndex;\n    let itemWidth = this.itemElements[0].offsetWidth;\n    this.listElement.scrollLeft += (itemWidth + this.itemsMargin) * indexDiff;\n  }\n\n  _updateNavItems(targetIndex) {\n    // очистить активный класс\n    this.navItemElements[this.lastIndex].classList.remove(this.navItemActiveClass); // 3. Установить в навигацию по установленному номеру активный класс\n\n    this.navItemElements[targetIndex].classList.add(this.navItemActiveClass);\n  }\n\n  _updateToggleButtons(action) {\n    let operations = {};\n\n    operations['showLeftToggle'] = () => this.element.classList.remove(this.firstSlideModificator);\n\n    operations['hideLeftToggle'] = () => this.element.classList.add(this.firstSlideModificator);\n\n    operations['showRightToggle'] = () => this.element.classList.remove(this.lastSlideModificator);\n\n    operations['hideRightToggle'] = () => this.element.classList.add(this.lastSlideModificator);\n\n    operations[action]();\n  }\n\n}\n\nconst SLIDER_SELECTOR = '.slider';\n\nfunction initSliders() {\n  const sliderElements = Array.from(document.querySelectorAll(SLIDER_SELECTOR));\n  const sliders = sliderElements.map(elem => new Slider(elem));\n  return sliders;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initSliders);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/slider/_slider.js\n");

/***/ }),

/***/ "./source/sass/blocks/stars/_stars.js":
/*!********************************************!*\
  !*** ./source/sass/blocks/stars/_stars.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n // меняет текст оценки при выборе звезды и загрузке страницы\n\nconst captionSelector = '.stars__selected-input';\n\nclass Stars {\n  constructor(element) {\n    this.captionElement = element.querySelector(captionSelector);\n    let selectedElement = element.querySelector(':checked');\n\n    this._setCaption(selectedElement);\n\n    element.addEventListener('change', evt => {\n      this._setCaption(evt.target);\n    });\n  }\n\n  _setCaption(selectedElement) {\n    this.captionElement.textContent = selectedElement.getAttribute('aria-label');\n  }\n\n}\n\nconst STARS_SELECTOR = '.stars__fieldset';\n\nfunction initStars() {\n  const starElements = Array.from(document.querySelectorAll(STARS_SELECTOR));\n  const stars = starElements.map(elem => new Stars(elem));\n  return stars;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initStars);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2Fzcy9ibG9ja3Mvc3RhcnMvX3N0YXJzLmpzPzZjZTMiXSwibmFtZXMiOlsiY2FwdGlvblNlbGVjdG9yIiwiU3RhcnMiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJjYXB0aW9uRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzZWxlY3RlZEVsZW1lbnQiLCJfc2V0Q2FwdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJ0YXJnZXQiLCJ0ZXh0Q29udGVudCIsImdldEF0dHJpYnV0ZSIsIlNUQVJTX1NFTEVDVE9SIiwiaW5pdFN0YXJzIiwic3RhckVsZW1lbnRzIiwiQXJyYXkiLCJmcm9tIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwic3RhcnMiLCJtYXAiLCJlbGVtIl0sIm1hcHBpbmdzIjoiQUFBQTtDQUNBOztBQUdBLE1BQU1BLGVBQWUsR0FBRyx3QkFBeEI7O0FBRUEsTUFBTUMsS0FBTixDQUFZO0FBQ1ZDLGFBQVcsQ0FBQ0MsT0FBRCxFQUFVO0FBQ25CLFNBQUtDLGNBQUwsR0FBc0JELE9BQU8sQ0FBQ0UsYUFBUixDQUFzQkwsZUFBdEIsQ0FBdEI7QUFFQSxRQUFJTSxlQUFlLEdBQUdILE9BQU8sQ0FBQ0UsYUFBUixDQUFzQixVQUF0QixDQUF0Qjs7QUFDQSxTQUFLRSxXQUFMLENBQWlCRCxlQUFqQjs7QUFFQUgsV0FBTyxDQUFDSyxnQkFBUixDQUF5QixRQUF6QixFQUFvQ0MsR0FBRCxJQUFTO0FBQzFDLFdBQUtGLFdBQUwsQ0FBaUJFLEdBQUcsQ0FBQ0MsTUFBckI7QUFDRCxLQUZEO0FBR0Q7O0FBRURILGFBQVcsQ0FBQ0QsZUFBRCxFQUFrQjtBQUMzQixTQUFLRixjQUFMLENBQW9CTyxXQUFwQixHQUFrQ0wsZUFBZSxDQUFDTSxZQUFoQixDQUE2QixZQUE3QixDQUFsQztBQUNEOztBQWRTOztBQW1CWixNQUFNQyxjQUFjLEdBQUcsa0JBQXZCOztBQUVBLFNBQVNDLFNBQVQsR0FBcUI7QUFDbkIsUUFBTUMsWUFBWSxHQUFHQyxLQUFLLENBQUNDLElBQU4sQ0FBV0MsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQk4sY0FBMUIsQ0FBWCxDQUFyQjtBQUNBLFFBQU1PLEtBQUssR0FBR0wsWUFBWSxDQUFDTSxHQUFiLENBQWtCQyxJQUFELElBQVUsSUFBSXJCLEtBQUosQ0FBVXFCLElBQVYsQ0FBM0IsQ0FBZDtBQUNBLFNBQU9GLEtBQVA7QUFDRDs7QUFFY04sd0VBQWYiLCJmaWxlIjoiLi9zb3VyY2Uvc2Fzcy9ibG9ja3Mvc3RhcnMvX3N0YXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8g0LzQtdC90Y/QtdGCINGC0LXQutGB0YIg0L7RhtC10L3QutC4INC/0YDQuCDQstGL0LHQvtGA0LUg0LfQstC10LfQtNGLINC4INC30LDQs9GA0YPQt9C60LUg0YHRgtGA0LDQvdC40YbRi1xuXG5cbmNvbnN0IGNhcHRpb25TZWxlY3RvciA9ICcuc3RhcnNfX3NlbGVjdGVkLWlucHV0JztcblxuY2xhc3MgU3RhcnMge1xuICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgdGhpcy5jYXB0aW9uRWxlbWVudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcihjYXB0aW9uU2VsZWN0b3IpO1xuXG4gICAgbGV0IHNlbGVjdGVkRWxlbWVudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignOmNoZWNrZWQnKTtcbiAgICB0aGlzLl9zZXRDYXB0aW9uKHNlbGVjdGVkRWxlbWVudCk7XG5cbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChldnQpID0+IHtcbiAgICAgIHRoaXMuX3NldENhcHRpb24oZXZ0LnRhcmdldCk7XG4gICAgfSk7XG4gIH1cblxuICBfc2V0Q2FwdGlvbihzZWxlY3RlZEVsZW1lbnQpIHtcbiAgICB0aGlzLmNhcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gc2VsZWN0ZWRFbGVtZW50LmdldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcpO1xuICB9XG59XG5cblxuXG5jb25zdCBTVEFSU19TRUxFQ1RPUiA9ICcuc3RhcnNfX2ZpZWxkc2V0JztcblxuZnVuY3Rpb24gaW5pdFN0YXJzKCkge1xuICBjb25zdCBzdGFyRWxlbWVudHMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoU1RBUlNfU0VMRUNUT1IpKTtcbiAgY29uc3Qgc3RhcnMgPSBzdGFyRWxlbWVudHMubWFwKChlbGVtKSA9PiBuZXcgU3RhcnMoZWxlbSkpO1xuICByZXR1cm4gc3RhcnM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluaXRTdGFycztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./source/sass/blocks/stars/_stars.js\n");

/***/ }),

/***/ "./source/sass/blocks/switch-view/_switch-view.js":
/*!********************************************************!*\
  !*** ./source/sass/blocks/switch-view/_switch-view.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\nconst TargetView = {\n  GRID: 'grid',\n  LIST: 'list'\n};\nconst LOCAL_STORAGE_PROPERTY_NAME = 'display';\n\nclass SwitchView {\n  constructor(overrides) {\n    const defaults = {\n      gridTriggerSelector: '.switch-view__input--grid',\n      listTriggerSelector: '.switch-view__input--list',\n      listElementSelector: '.minicard-list__list',\n      listElementGridClass: 'minicard-list__list--grid',\n      listElementListClass: 'minicard-list__list--list',\n      minicardSelector: '.minicard',\n      minicardGridClass: 'minicard--grid',\n      minicardListClass: 'minicard--list'\n    };\n    Object.assign(this, defaults, overrides);\n    this.gridTriggerElement = document.querySelector(this.gridTriggerSelector);\n    this.listTriggerElement = document.querySelector(this.listTriggerSelector);\n    if (!this.gridTriggerElement || !this.listTriggerElement) return;\n    this.gridTriggerElement.targetView = TargetView.GRID;\n    this.listTriggerElement.targetView = TargetView.LIST;\n\n    const savedConfig = this._loadConfigFromLocalStorage();\n\n    if (savedConfig) {\n      const triggerIsUpdated = this._updateTriggersAccordingToConfig({\n        targetView: savedConfig\n      }); // если отображается не тот конфиг, переключить вид\n\n\n      if (triggerIsUpdated) {\n        this._toggleView({\n          targetView: savedConfig\n        });\n      }\n    }\n\n    this._addChangeViewHandlers();\n  }\n\n  _addChangeViewHandlers() {\n    this.gridTriggerElement.addEventListener('change', () => {\n      this._toggleView({\n        targetView: this.gridTriggerElement.targetView\n      });\n\n      this._saveConfigToLocalStorage({\n        targetView: this.gridTriggerElement.targetView\n      });\n    });\n    this.listTriggerElement.addEventListener('change', () => {\n      this._toggleView({\n        targetView: this.listTriggerElement.targetView\n      });\n\n      this._saveConfigToLocalStorage({\n        targetView: this.listTriggerElement.targetView\n      });\n    });\n  }\n\n  _toggleView({\n    targetView\n  }) {\n    const listElement = document.querySelector(this.listElementSelector);\n    const minicards = listElement.querySelectorAll(this.minicardSelector);\n\n    const enableGridView = () => {\n      listElement.classList.remove(this.listElementListClass);\n      listElement.classList.add(this.listElementGridClass);\n      minicards.forEach(element => {\n        element.classList.remove(this.minicardListClass);\n        element.classList.add(this.minicardGridClass);\n      });\n    };\n\n    const enableListView = () => {\n      listElement.classList.remove(this.listElementGridClass);\n      listElement.classList.add(this.listElementListClass);\n      minicards.forEach(element => {\n        element.classList.remove(this.minicardGridClass);\n        element.classList.add(this.minicardListClass);\n      });\n    };\n\n    targetView === TargetView.GRID ? enableGridView() : enableListView();\n  }\n\n  _updateTriggersAccordingToConfig({\n    targetView\n  }) {\n    let triggerIsUpdated = false;\n    let targetElement;\n\n    if (this.gridTriggerElement.targetView === targetView) {\n      targetElement = this.gridTriggerElement;\n    } else {\n      targetElement = this.listTriggerElement;\n    }\n\n    if (!targetElement.checked) {\n      targetElement.checked = true;\n      triggerIsUpdated = true;\n    }\n\n    return triggerIsUpdated;\n  }\n\n  _saveConfigToLocalStorage({\n    targetView\n  }) {\n    localStorage.setItem(LOCAL_STORAGE_PROPERTY_NAME, targetView);\n  }\n\n  _loadConfigFromLocalStorage() {\n    return localStorage.getItem(LOCAL_STORAGE_PROPERTY_NAME);\n  }\n\n}\n\nfunction initSwitchView() {\n  return new SwitchView();\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initSwitchView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/sass/blocks/switch-view/_switch-view.js\n");

/***/ }),

/***/ "./source/sass/blocks/textfield/_textfield.js":
/*!****************************************************!*\
  !*** ./source/sass/blocks/textfield/_textfield.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_custom_focus_events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../js/custom-focus-events.js */ \"./source/js/custom-focus-events.js\");\n\n\nclass Textfield {\n  constructor(element, overrides) {\n    const defaults = {\n      inputSelector: '.textfield__input'\n    };\n    Object.assign(this, defaults, overrides);\n    this.element = element;\n    this.inputElement = this.element.querySelector(this.inputSelector);\n  }\n\n}\n\nclass TextfieldOutlined extends Textfield {\n  constructor(element, overrides) {\n    super(element);\n    const defaults = {\n      labelSelector: '.textfield__label',\n      textfieldActiveClass: 'textfield--active',\n      labelOnTopClass: 'textfield__label--top'\n    };\n    Object.assign(this, defaults, overrides);\n    this.labelElement = this.element.querySelector(this.labelSelector);\n\n    if (this.inputElement.value !== '') {\n      this.labelElement.classList.add(this.labelOnTopClass);\n    }\n\n    Object(_js_custom_focus_events_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.element);\n    this.element.addEventListener('focusEnter', this._onTextfieldFocusEnter.bind(this));\n    this.element.addEventListener('focusLeave', this._onTextfieldFocusLeave.bind(this));\n  }\n\n  _onTextfieldFocusEnter() {\n    this._activateTextfield();\n  }\n\n  _onTextfieldFocusLeave() {\n    this._deactivateTextfield();\n  }\n\n  _activateTextfield() {\n    this.element.classList.add(this.textfieldActiveClass);\n    this.labelElement.classList.add(this.labelOnTopClass);\n  }\n\n  _deactivateTextfield() {\n    this.element.classList.remove(this.textfieldActiveClass);\n\n    if (!this.inputElement.value) {\n      this.labelElement.classList.remove(this.labelOnTopClass);\n    }\n  }\n\n}\n\nconst textfieldSelector = '.textfield';\n\nfunction initTextfields() {\n  const textfieldElements = document.querySelectorAll(textfieldSelector);\n  const textfields = [].map.call(textfieldElements, elem => new TextfieldOutlined(elem));\n  return textfields;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initTextfields); // * Material design\n// Вызов для одного элемента на странице\n// const foo = new MDCFoo(document.querySelector('.mdc-foo'));\n// Вызов для всех элементов на странице\n// const foos = [].map.call(document.querySelectorAll('.mdc-foo'), function(el) {\n//   return new MDCFoo(el);\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvdGV4dGZpZWxkL190ZXh0ZmllbGQuanM/N2MxYyJdLCJuYW1lcyI6WyJUZXh0ZmllbGQiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJvdmVycmlkZXMiLCJkZWZhdWx0cyIsImlucHV0U2VsZWN0b3IiLCJPYmplY3QiLCJhc3NpZ24iLCJpbnB1dEVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiVGV4dGZpZWxkT3V0bGluZWQiLCJsYWJlbFNlbGVjdG9yIiwidGV4dGZpZWxkQWN0aXZlQ2xhc3MiLCJsYWJlbE9uVG9wQ2xhc3MiLCJsYWJlbEVsZW1lbnQiLCJ2YWx1ZSIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZEN1c3RvbUZvY3VzRXZlbnRzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9vblRleHRmaWVsZEZvY3VzRW50ZXIiLCJiaW5kIiwiX29uVGV4dGZpZWxkRm9jdXNMZWF2ZSIsIl9hY3RpdmF0ZVRleHRmaWVsZCIsIl9kZWFjdGl2YXRlVGV4dGZpZWxkIiwicmVtb3ZlIiwidGV4dGZpZWxkU2VsZWN0b3IiLCJpbml0VGV4dGZpZWxkcyIsInRleHRmaWVsZEVsZW1lbnRzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGV4dGZpZWxkcyIsIm1hcCIsImNhbGwiLCJlbGVtIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7O0FBR0EsTUFBTUEsU0FBTixDQUFnQjtBQUNkQyxhQUFXLENBQUNDLE9BQUQsRUFBVUMsU0FBVixFQUFxQjtBQUU5QixVQUFNQyxRQUFRLEdBQUc7QUFDZkMsbUJBQWEsRUFBRztBQURELEtBQWpCO0FBSUFDLFVBQU0sQ0FBQ0MsTUFBUCxDQUFjLElBQWQsRUFBb0JILFFBQXBCLEVBQThCRCxTQUE5QjtBQUVBLFNBQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtNLFlBQUwsR0FBb0IsS0FBS04sT0FBTCxDQUFhTyxhQUFiLENBQTJCLEtBQUtKLGFBQWhDLENBQXBCO0FBQ0Q7O0FBWGE7O0FBZWhCLE1BQU1LLGlCQUFOLFNBQWdDVixTQUFoQyxDQUEwQztBQUN4Q0MsYUFBVyxDQUFDQyxPQUFELEVBQVVDLFNBQVYsRUFBcUI7QUFFOUIsVUFBTUQsT0FBTjtBQUVBLFVBQU1FLFFBQVEsR0FBRztBQUNmTyxtQkFBYSxFQUFHLG1CQUREO0FBRWZDLDBCQUFvQixFQUFHLG1CQUZSO0FBR2ZDLHFCQUFlLEVBQUc7QUFISCxLQUFqQjtBQU1BUCxVQUFNLENBQUNDLE1BQVAsQ0FBYyxJQUFkLEVBQW9CSCxRQUFwQixFQUE4QkQsU0FBOUI7QUFFQSxTQUFLVyxZQUFMLEdBQW9CLEtBQUtaLE9BQUwsQ0FBYU8sYUFBYixDQUEyQixLQUFLRSxhQUFoQyxDQUFwQjs7QUFFQSxRQUFJLEtBQUtILFlBQUwsQ0FBa0JPLEtBQWxCLEtBQTRCLEVBQWhDLEVBQW9DO0FBQ2xDLFdBQUtELFlBQUwsQ0FBa0JFLFNBQWxCLENBQTRCQyxHQUE1QixDQUFnQyxLQUFLSixlQUFyQztBQUNEOztBQUVESyw4RUFBdUIsQ0FBQyxLQUFLaEIsT0FBTixDQUF2QjtBQUNBLFNBQUtBLE9BQUwsQ0FBYWlCLGdCQUFiLENBQThCLFlBQTlCLEVBQTRDLEtBQUtDLHNCQUFMLENBQTRCQyxJQUE1QixDQUFpQyxJQUFqQyxDQUE1QztBQUNBLFNBQUtuQixPQUFMLENBQWFpQixnQkFBYixDQUE4QixZQUE5QixFQUE0QyxLQUFLRyxzQkFBTCxDQUE0QkQsSUFBNUIsQ0FBaUMsSUFBakMsQ0FBNUM7QUFDRDs7QUFHREQsd0JBQXNCLEdBQUc7QUFDdkIsU0FBS0csa0JBQUw7QUFDRDs7QUFHREQsd0JBQXNCLEdBQUc7QUFDdkIsU0FBS0Usb0JBQUw7QUFDRDs7QUFHREQsb0JBQWtCLEdBQUc7QUFDbkIsU0FBS3JCLE9BQUwsQ0FBYWMsU0FBYixDQUF1QkMsR0FBdkIsQ0FBMkIsS0FBS0wsb0JBQWhDO0FBQ0EsU0FBS0UsWUFBTCxDQUFrQkUsU0FBbEIsQ0FBNEJDLEdBQTVCLENBQWdDLEtBQUtKLGVBQXJDO0FBQ0Q7O0FBR0RXLHNCQUFvQixHQUFHO0FBQ3JCLFNBQUt0QixPQUFMLENBQWFjLFNBQWIsQ0FBdUJTLE1BQXZCLENBQThCLEtBQUtiLG9CQUFuQzs7QUFDQSxRQUFJLENBQUMsS0FBS0osWUFBTCxDQUFrQk8sS0FBdkIsRUFBOEI7QUFDNUIsV0FBS0QsWUFBTCxDQUFrQkUsU0FBbEIsQ0FBNEJTLE1BQTVCLENBQW1DLEtBQUtaLGVBQXhDO0FBQ0Q7QUFDRjs7QUE5Q3VDOztBQW9EMUMsTUFBTWEsaUJBQWlCLEdBQUcsWUFBMUI7O0FBRUEsU0FBU0MsY0FBVCxHQUEwQjtBQUN4QixRQUFNQyxpQkFBaUIsR0FBR0MsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQkosaUJBQTFCLENBQTFCO0FBQ0EsUUFBTUssVUFBVSxHQUFHLEdBQUdDLEdBQUgsQ0FBT0MsSUFBUCxDQUFZTCxpQkFBWixFQUFnQ00sSUFBRCxJQUFVLElBQUl4QixpQkFBSixDQUFzQndCLElBQXRCLENBQXpDLENBQW5CO0FBQ0EsU0FBT0gsVUFBUDtBQUNEOztBQUdjSiw2RUFBZixFLENBS0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvdGV4dGZpZWxkL190ZXh0ZmllbGQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwZW5kQ3VzdG9tRm9jdXNFdmVudHMgZnJvbSAnLi4vLi4vLi4vanMvY3VzdG9tLWZvY3VzLWV2ZW50cy5qcyc7XG5cblxuY2xhc3MgVGV4dGZpZWxkIHtcbiAgY29uc3RydWN0b3IoZWxlbWVudCwgb3ZlcnJpZGVzKSB7XG5cbiAgICBjb25zdCBkZWZhdWx0cyA9IHtcbiAgICAgIGlucHV0U2VsZWN0b3IgOiAnLnRleHRmaWVsZF9faW5wdXQnXG4gICAgfTtcblxuICAgIE9iamVjdC5hc3NpZ24odGhpcywgZGVmYXVsdHMsIG92ZXJyaWRlcyk7XG5cbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIHRoaXMuaW5wdXRFbGVtZW50ID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5pbnB1dFNlbGVjdG9yKTtcbiAgfVxufVxuXG5cbmNsYXNzIFRleHRmaWVsZE91dGxpbmVkIGV4dGVuZHMgVGV4dGZpZWxkIHtcbiAgY29uc3RydWN0b3IoZWxlbWVudCwgb3ZlcnJpZGVzKSB7XG5cbiAgICBzdXBlcihlbGVtZW50KTtcblxuICAgIGNvbnN0IGRlZmF1bHRzID0ge1xuICAgICAgbGFiZWxTZWxlY3RvciA6ICcudGV4dGZpZWxkX19sYWJlbCcsXG4gICAgICB0ZXh0ZmllbGRBY3RpdmVDbGFzcyA6ICd0ZXh0ZmllbGQtLWFjdGl2ZScsXG4gICAgICBsYWJlbE9uVG9wQ2xhc3MgOiAndGV4dGZpZWxkX19sYWJlbC0tdG9wJ1xuICAgIH07XG5cbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGRlZmF1bHRzLCBvdmVycmlkZXMpO1xuXG4gICAgdGhpcy5sYWJlbEVsZW1lbnQgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmxhYmVsU2VsZWN0b3IpO1xuXG4gICAgaWYgKHRoaXMuaW5wdXRFbGVtZW50LnZhbHVlICE9PSAnJykge1xuICAgICAgdGhpcy5sYWJlbEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLmxhYmVsT25Ub3BDbGFzcyk7XG4gICAgfVxuXG4gICAgYXBwZW5kQ3VzdG9tRm9jdXNFdmVudHModGhpcy5lbGVtZW50KTtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNFbnRlcicsIHRoaXMuX29uVGV4dGZpZWxkRm9jdXNFbnRlci5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNMZWF2ZScsIHRoaXMuX29uVGV4dGZpZWxkRm9jdXNMZWF2ZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG5cbiAgX29uVGV4dGZpZWxkRm9jdXNFbnRlcigpIHtcbiAgICB0aGlzLl9hY3RpdmF0ZVRleHRmaWVsZCgpO1xuICB9XG5cblxuICBfb25UZXh0ZmllbGRGb2N1c0xlYXZlKCkge1xuICAgIHRoaXMuX2RlYWN0aXZhdGVUZXh0ZmllbGQoKTtcbiAgfVxuXG5cbiAgX2FjdGl2YXRlVGV4dGZpZWxkKCkge1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMudGV4dGZpZWxkQWN0aXZlQ2xhc3MpO1xuICAgIHRoaXMubGFiZWxFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5sYWJlbE9uVG9wQ2xhc3MpO1xuICB9XG5cblxuICBfZGVhY3RpdmF0ZVRleHRmaWVsZCgpIHtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLnRleHRmaWVsZEFjdGl2ZUNsYXNzKTtcbiAgICBpZiAoIXRoaXMuaW5wdXRFbGVtZW50LnZhbHVlKSB7XG4gICAgICB0aGlzLmxhYmVsRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMubGFiZWxPblRvcENsYXNzKTtcbiAgICB9XG4gIH1cbn1cblxuXG5cblxuY29uc3QgdGV4dGZpZWxkU2VsZWN0b3IgPSAnLnRleHRmaWVsZCc7XG5cbmZ1bmN0aW9uIGluaXRUZXh0ZmllbGRzKCkge1xuICBjb25zdCB0ZXh0ZmllbGRFbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGV4dGZpZWxkU2VsZWN0b3IpO1xuICBjb25zdCB0ZXh0ZmllbGRzID0gW10ubWFwLmNhbGwodGV4dGZpZWxkRWxlbWVudHMsIChlbGVtKSA9PiBuZXcgVGV4dGZpZWxkT3V0bGluZWQoZWxlbSkpO1xuICByZXR1cm4gdGV4dGZpZWxkcztcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBpbml0VGV4dGZpZWxkcztcblxuXG5cblxuLy8gKiBNYXRlcmlhbCBkZXNpZ25cbi8vINCS0YvQt9C+0LIg0LTQu9GPINC+0LTQvdC+0LPQviDRjdC70LXQvNC10L3RgtCwINC90LAg0YHRgtGA0LDQvdC40YbQtVxuLy8gY29uc3QgZm9vID0gbmV3IE1EQ0Zvbyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWRjLWZvbycpKTtcblxuLy8g0JLRi9C30L7QsiDQtNC70Y8g0LLRgdC10YUg0Y3Qu9C10LzQtdC90YLQvtCyINC90LAg0YHRgtGA0LDQvdC40YbQtVxuLy8gY29uc3QgZm9vcyA9IFtdLm1hcC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tZGMtZm9vJyksIGZ1bmN0aW9uKGVsKSB7XG4vLyAgIHJldHVybiBuZXcgTURDRm9vKGVsKTtcbi8vIH0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/sass/blocks/textfield/_textfield.js\n");

/***/ }),

/***/ "./source/sass/blocks/tooltip/_tooltip.js":
/*!************************************************!*\
  !*** ./source/sass/blocks/tooltip/_tooltip.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst tooltipSelector = '[data-tooltip]';\nconst tooltipCardClassName = 'tooltip__card';\nconst openedTooltipClassName = 'tooltip--opened';\nconst topTooltipClassName = 'tooltip--top';\nconst bottomTooltipClassName = 'tooltip--bottom';\nconst offset = 12;\n\nclass Tooltip {\n  constructor(element) {\n    this.element = element;\n    this.element.addEventListener('mouseover', this._onTooltipMouseenter.bind(this));\n    this.element.addEventListener('mouseout', this._onTooltipMouseleave.bind(this));\n    this.tooltipCardElem = null;\n  }\n\n  _onTooltipMouseenter() {\n    this._createTooltip();\n\n    this._positionTooltip();\n  }\n\n  _onTooltipMouseleave() {\n    this.tooltipCardElem.remove();\n    this.tooltipCardElem = null;\n    this.element.classList.remove(openedTooltipClassName);\n    this.element.classList.remove(topTooltipClassName);\n    this.element.classList.remove(bottomTooltipClassName);\n  }\n\n  _createTooltip() {\n    this.tooltipCardElem = document.createElement('div');\n    this.tooltipCardElem.className = tooltipCardClassName;\n    this.tooltipCardElem.innerHTML = this.element.dataset.tooltip;\n    this.element.append(this.tooltipCardElem);\n    this.element.classList.add(openedTooltipClassName);\n  }\n\n  _positionTooltip() {\n    let tooltipCoords = this.tooltipCardElem.getBoundingClientRect(); // проверка выхода за пределы слева\n\n    if (tooltipCoords.left < 0) {\n      let shift = Math.floor(tooltipCoords.left) * -1;\n      this.tooltipCardElem.style.transform = \"translateX(\".concat(shift, \"px)\");\n    } // проверка выхода за пределы справа\n\n\n    if (tooltipCoords.right > document.documentElement.clientWidth) {\n      let diff = Math.ceil(tooltipCoords.right - document.documentElement.clientWidth);\n      this.tooltipCardElem.style.transform = \"translateX(\".concat(-diff, \"px)\");\n    } // показ снизу, если тултип выходит за верхнюю часть вьюпорта\n\n\n    if (tooltipCoords.top < 0) {\n      this.tooltipCardElem.style.bottom = 'auto';\n      this.tooltipCardElem.style.top = \"calc(100% + \".concat(offset, \"px)\");\n      this.element.classList.add(bottomTooltipClassName);\n    } else {\n      this.element.classList.add(topTooltipClassName);\n    }\n  }\n\n}\n\nfunction initTooltips() {\n  const tooltipCardElements = document.querySelectorAll(tooltipSelector);\n  const toolTips = [].map.call(tooltipCardElements, elem => new Tooltip(elem));\n  return toolTips;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initTooltips);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zb3VyY2Uvc2Fzcy9ibG9ja3MvdG9vbHRpcC9fdG9vbHRpcC5qcz85NjYxIl0sIm5hbWVzIjpbInRvb2x0aXBTZWxlY3RvciIsInRvb2x0aXBDYXJkQ2xhc3NOYW1lIiwib3BlbmVkVG9vbHRpcENsYXNzTmFtZSIsInRvcFRvb2x0aXBDbGFzc05hbWUiLCJib3R0b21Ub29sdGlwQ2xhc3NOYW1lIiwib2Zmc2V0IiwiVG9vbHRpcCIsImNvbnN0cnVjdG9yIiwiZWxlbWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfb25Ub29sdGlwTW91c2VlbnRlciIsImJpbmQiLCJfb25Ub29sdGlwTW91c2VsZWF2ZSIsInRvb2x0aXBDYXJkRWxlbSIsIl9jcmVhdGVUb29sdGlwIiwiX3Bvc2l0aW9uVG9vbHRpcCIsInJlbW92ZSIsImNsYXNzTGlzdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImlubmVySFRNTCIsImRhdGFzZXQiLCJ0b29sdGlwIiwiYXBwZW5kIiwiYWRkIiwidG9vbHRpcENvb3JkcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJzaGlmdCIsIk1hdGgiLCJmbG9vciIsInN0eWxlIiwidHJhbnNmb3JtIiwicmlnaHQiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImRpZmYiLCJjZWlsIiwidG9wIiwiYm90dG9tIiwiaW5pdFRvb2x0aXBzIiwidG9vbHRpcENhcmRFbGVtZW50cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0b29sVGlwcyIsIm1hcCIsImNhbGwiLCJlbGVtIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQU1BLGVBQWUsR0FBRyxnQkFBeEI7QUFDQSxNQUFNQyxvQkFBb0IsR0FBRyxlQUE3QjtBQUNBLE1BQU1DLHNCQUFzQixHQUFHLGlCQUEvQjtBQUNBLE1BQU1DLG1CQUFtQixHQUFHLGNBQTVCO0FBQ0EsTUFBTUMsc0JBQXNCLEdBQUcsaUJBQS9CO0FBRUEsTUFBTUMsTUFBTSxHQUFHLEVBQWY7O0FBR0EsTUFBTUMsT0FBTixDQUFjO0FBQ1pDLGFBQVcsQ0FBQ0MsT0FBRCxFQUFVO0FBQ25CLFNBQUtBLE9BQUwsR0FBZUEsT0FBZjtBQUNBLFNBQUtBLE9BQUwsQ0FBYUMsZ0JBQWIsQ0FBOEIsV0FBOUIsRUFBMkMsS0FBS0Msb0JBQUwsQ0FBMEJDLElBQTFCLENBQStCLElBQS9CLENBQTNDO0FBQ0EsU0FBS0gsT0FBTCxDQUFhQyxnQkFBYixDQUE4QixVQUE5QixFQUEwQyxLQUFLRyxvQkFBTCxDQUEwQkQsSUFBMUIsQ0FBK0IsSUFBL0IsQ0FBMUM7QUFDQSxTQUFLRSxlQUFMLEdBQXVCLElBQXZCO0FBQ0Q7O0FBRURILHNCQUFvQixHQUFHO0FBQ3JCLFNBQUtJLGNBQUw7O0FBQ0EsU0FBS0MsZ0JBQUw7QUFDRDs7QUFHREgsc0JBQW9CLEdBQUc7QUFDckIsU0FBS0MsZUFBTCxDQUFxQkcsTUFBckI7QUFDQSxTQUFLSCxlQUFMLEdBQXVCLElBQXZCO0FBQ0EsU0FBS0wsT0FBTCxDQUFhUyxTQUFiLENBQXVCRCxNQUF2QixDQUE4QmQsc0JBQTlCO0FBQ0EsU0FBS00sT0FBTCxDQUFhUyxTQUFiLENBQXVCRCxNQUF2QixDQUE4QmIsbUJBQTlCO0FBQ0EsU0FBS0ssT0FBTCxDQUFhUyxTQUFiLENBQXVCRCxNQUF2QixDQUE4Qlosc0JBQTlCO0FBQ0Q7O0FBR0RVLGdCQUFjLEdBQUc7QUFDZixTQUFLRCxlQUFMLEdBQXVCSyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBdkI7QUFDQSxTQUFLTixlQUFMLENBQXFCTyxTQUFyQixHQUFpQ25CLG9CQUFqQztBQUNBLFNBQUtZLGVBQUwsQ0FBcUJRLFNBQXJCLEdBQWlDLEtBQUtiLE9BQUwsQ0FBYWMsT0FBYixDQUFxQkMsT0FBdEQ7QUFDQSxTQUFLZixPQUFMLENBQWFnQixNQUFiLENBQW9CLEtBQUtYLGVBQXpCO0FBQ0EsU0FBS0wsT0FBTCxDQUFhUyxTQUFiLENBQXVCUSxHQUF2QixDQUEyQnZCLHNCQUEzQjtBQUNEOztBQUdEYSxrQkFBZ0IsR0FBRztBQUNqQixRQUFJVyxhQUFhLEdBQUcsS0FBS2IsZUFBTCxDQUFxQmMscUJBQXJCLEVBQXBCLENBRGlCLENBRWpCOztBQUNBLFFBQUlELGFBQWEsQ0FBQ0UsSUFBZCxHQUFxQixDQUF6QixFQUE0QjtBQUMxQixVQUFJQyxLQUFLLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxhQUFhLENBQUNFLElBQXpCLElBQWlDLENBQUMsQ0FBOUM7QUFDQSxXQUFLZixlQUFMLENBQXFCbUIsS0FBckIsQ0FBMkJDLFNBQTNCLHdCQUFxREosS0FBckQ7QUFDRCxLQU5nQixDQU9qQjs7O0FBQ0EsUUFBSUgsYUFBYSxDQUFDUSxLQUFkLEdBQXNCaEIsUUFBUSxDQUFDaUIsZUFBVCxDQUF5QkMsV0FBbkQsRUFBZ0U7QUFDOUQsVUFBSUMsSUFBSSxHQUFHUCxJQUFJLENBQUNRLElBQUwsQ0FBVVosYUFBYSxDQUFDUSxLQUFkLEdBQXNCaEIsUUFBUSxDQUFDaUIsZUFBVCxDQUF5QkMsV0FBekQsQ0FBWDtBQUNBLFdBQUt2QixlQUFMLENBQXFCbUIsS0FBckIsQ0FBMkJDLFNBQTNCLHdCQUFxRCxDQUFDSSxJQUF0RDtBQUNELEtBWGdCLENBYWpCOzs7QUFDQSxRQUFJWCxhQUFhLENBQUNhLEdBQWQsR0FBb0IsQ0FBeEIsRUFBMkI7QUFDekIsV0FBSzFCLGVBQUwsQ0FBcUJtQixLQUFyQixDQUEyQlEsTUFBM0IsR0FBb0MsTUFBcEM7QUFDQSxXQUFLM0IsZUFBTCxDQUFxQm1CLEtBQXJCLENBQTJCTyxHQUEzQix5QkFBZ0RsQyxNQUFoRDtBQUNBLFdBQUtHLE9BQUwsQ0FBYVMsU0FBYixDQUF1QlEsR0FBdkIsQ0FBMkJyQixzQkFBM0I7QUFDRCxLQUpELE1BSU87QUFDTCxXQUFLSSxPQUFMLENBQWFTLFNBQWIsQ0FBdUJRLEdBQXZCLENBQTJCdEIsbUJBQTNCO0FBQ0Q7QUFDRjs7QUFyRFc7O0FBeURkLFNBQVNzQyxZQUFULEdBQXdCO0FBQ3RCLFFBQU1DLG1CQUFtQixHQUFHeEIsUUFBUSxDQUFDeUIsZ0JBQVQsQ0FBMEIzQyxlQUExQixDQUE1QjtBQUNBLFFBQU00QyxRQUFRLEdBQUcsR0FBR0MsR0FBSCxDQUFPQyxJQUFQLENBQVlKLG1CQUFaLEVBQWtDSyxJQUFELElBQVUsSUFBSXpDLE9BQUosQ0FBWXlDLElBQVosQ0FBM0MsQ0FBakI7QUFDQSxTQUFPSCxRQUFQO0FBQ0Q7O0FBRWNILDJFQUFmIiwiZmlsZSI6Ii4vc291cmNlL3Nhc3MvYmxvY2tzL3Rvb2x0aXAvX3Rvb2x0aXAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0b29sdGlwU2VsZWN0b3IgPSAnW2RhdGEtdG9vbHRpcF0nO1xuY29uc3QgdG9vbHRpcENhcmRDbGFzc05hbWUgPSAndG9vbHRpcF9fY2FyZCc7XG5jb25zdCBvcGVuZWRUb29sdGlwQ2xhc3NOYW1lID0gJ3Rvb2x0aXAtLW9wZW5lZCc7XG5jb25zdCB0b3BUb29sdGlwQ2xhc3NOYW1lID0gJ3Rvb2x0aXAtLXRvcCc7XG5jb25zdCBib3R0b21Ub29sdGlwQ2xhc3NOYW1lID0gJ3Rvb2x0aXAtLWJvdHRvbSc7XG5cbmNvbnN0IG9mZnNldCA9IDEyO1xuXG5cbmNsYXNzIFRvb2x0aXAge1xuICBjb25zdHJ1Y3RvcihlbGVtZW50KSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdmVyJywgdGhpcy5fb25Ub29sdGlwTW91c2VlbnRlci5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VvdXQnLCB0aGlzLl9vblRvb2x0aXBNb3VzZWxlYXZlLmJpbmQodGhpcykpO1xuICAgIHRoaXMudG9vbHRpcENhcmRFbGVtID0gbnVsbDtcbiAgfVxuXG4gIF9vblRvb2x0aXBNb3VzZWVudGVyKCkge1xuICAgIHRoaXMuX2NyZWF0ZVRvb2x0aXAoKTtcbiAgICB0aGlzLl9wb3NpdGlvblRvb2x0aXAoKTtcbiAgfVxuXG5cbiAgX29uVG9vbHRpcE1vdXNlbGVhdmUoKSB7XG4gICAgdGhpcy50b29sdGlwQ2FyZEVsZW0ucmVtb3ZlKCk7XG4gICAgdGhpcy50b29sdGlwQ2FyZEVsZW0gPSBudWxsO1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKG9wZW5lZFRvb2x0aXBDbGFzc05hbWUpO1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRvcFRvb2x0aXBDbGFzc05hbWUpO1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGJvdHRvbVRvb2x0aXBDbGFzc05hbWUpO1xuICB9XG5cblxuICBfY3JlYXRlVG9vbHRpcCgpIHtcbiAgICB0aGlzLnRvb2x0aXBDYXJkRWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoaXMudG9vbHRpcENhcmRFbGVtLmNsYXNzTmFtZSA9IHRvb2x0aXBDYXJkQ2xhc3NOYW1lO1xuICAgIHRoaXMudG9vbHRpcENhcmRFbGVtLmlubmVySFRNTCA9IHRoaXMuZWxlbWVudC5kYXRhc2V0LnRvb2x0aXA7XG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZCh0aGlzLnRvb2x0aXBDYXJkRWxlbSk7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQob3BlbmVkVG9vbHRpcENsYXNzTmFtZSk7XG4gIH1cblxuXG4gIF9wb3NpdGlvblRvb2x0aXAoKSB7XG4gICAgbGV0IHRvb2x0aXBDb29yZHMgPSB0aGlzLnRvb2x0aXBDYXJkRWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAvLyDQv9GA0L7QstC10YDQutCwINCy0YvRhdC+0LTQsCDQt9CwINC/0YDQtdC00LXQu9GLINGB0LvQtdCy0LBcbiAgICBpZiAodG9vbHRpcENvb3Jkcy5sZWZ0IDwgMCkge1xuICAgICAgbGV0IHNoaWZ0ID0gTWF0aC5mbG9vcih0b29sdGlwQ29vcmRzLmxlZnQpICogLTE7XG4gICAgICB0aGlzLnRvb2x0aXBDYXJkRWxlbS5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgke3NoaWZ0fXB4KWA7XG4gICAgfVxuICAgIC8vINC/0YDQvtCy0LXRgNC60LAg0LLRi9GF0L7QtNCwINC30LAg0L/RgNC10LTQtdC70Ysg0YHQv9GA0LDQstCwXG4gICAgaWYgKHRvb2x0aXBDb29yZHMucmlnaHQgPiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpIHtcbiAgICAgIGxldCBkaWZmID0gTWF0aC5jZWlsKHRvb2x0aXBDb29yZHMucmlnaHQgLSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgpO1xuICAgICAgdGhpcy50b29sdGlwQ2FyZEVsZW0uc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZVgoJHstZGlmZn1weClgO1xuICAgIH1cblxuICAgIC8vINC/0L7QutCw0Lcg0YHQvdC40LfRgywg0LXRgdC70Lgg0YLRg9C70YLQuNC/INCy0YvRhdC+0LTQuNGCINC30LAg0LLQtdGA0YXQvdGO0Y4g0YfQsNGB0YLRjCDQstGM0Y7Qv9C+0YDRgtCwXG4gICAgaWYgKHRvb2x0aXBDb29yZHMudG9wIDwgMCkge1xuICAgICAgdGhpcy50b29sdGlwQ2FyZEVsZW0uc3R5bGUuYm90dG9tID0gJ2F1dG8nO1xuICAgICAgdGhpcy50b29sdGlwQ2FyZEVsZW0uc3R5bGUudG9wID0gYGNhbGMoMTAwJSArICR7b2Zmc2V0fXB4KWA7XG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChib3R0b21Ub29sdGlwQ2xhc3NOYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQodG9wVG9vbHRpcENsYXNzTmFtZSk7XG4gICAgfVxuICB9XG59XG5cblxuZnVuY3Rpb24gaW5pdFRvb2x0aXBzKCkge1xuICBjb25zdCB0b29sdGlwQ2FyZEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0b29sdGlwU2VsZWN0b3IpO1xuICBjb25zdCB0b29sVGlwcyA9IFtdLm1hcC5jYWxsKHRvb2x0aXBDYXJkRWxlbWVudHMsIChlbGVtKSA9PiBuZXcgVG9vbHRpcChlbGVtKSk7XG4gIHJldHVybiB0b29sVGlwcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW5pdFRvb2x0aXBzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./source/sass/blocks/tooltip/_tooltip.js\n");

/***/ })

/******/ });