"use strict";import{isTouchDevice}from"./util.js";const Button={LEFT:"Назад",RIGHT:"Вперед"},ButtonModClasses={[Button.LEFT]:"slider__toggle--left",[Button.RIGHT]:"slider__toggle--right"};function getButtonHTML(t){return`<button class="button slider__toggle ${ButtonModClasses[t]}" type="button">\n            <span class="visually-hidden">${t}</span>\n            <svg class="slider__toggle-icon" width="24" height="24">\n              <use href="img/svg/_sprite.svg#icon-arrow"></use>\n            </svg>\n          </button>`}class Slider{constructor(t,e){Object.assign(this,{sliderSelector:".slider",firstSlideModificator:"slider--first-slide",lastSlideModificator:"slider--last-slide",listSelector:".slider__list",itemSelector:".slider__item",mainNavSelector:".slider__nav",navItemSelector:".slider__nav-item",navItemActiveClass:"slider__nav-item--active",navLinkSelector:".slider__nav-link",buttonToggleSelector:".slider__toggle",buttonToggleLeftClass:"slider__toggle--left",buttonToggleRightClass:"slider__toggle--right",createToggtleButtons:!0},e),this.element=t,this.listElement=this.element.querySelector(this.listSelector),this.itemElements=this.element.querySelectorAll(this.itemSelector),this.mainNavElement=this.element.querySelector(this.mainNavSelector),this.mainNavElement&&(this.navItemElements=this.element.querySelectorAll(this.navItemSelector)),this.lastIndex=0,this.maxIndex=this.itemElements.length-1;let s=getComputedStyle(this.itemElements[0]).getPropertyValue("margin-right");this.itemsMargin=+s.slice(0,s.length-2),0!==this.maxIndex?(this.createToggtleButtons&&!isTouchDevice()&&(this.element.classList.add(this.firstSlideModificator),this._createToggleButtons()),this._createDataAttrIndex(),this._createIntersectionObserver({rootElement:this.listElement,targetElements:this.itemElements}),this.element.addEventListener("click",t=>{const e=()=>{let e=t.target.closest(this.navItemSelector);return!!e&&(t.preventDefault(),this._scrollSlide(+e.dataset.index),!0)},s=()=>{let e=t.target.closest(this.buttonToggleSelector);if(!e)return!1;let s=this.lastIndex;e.classList.contains(this.buttonToggleLeftClass)?s+=-1:s+=1,this._scrollSlide(s)};this.mainNavElement&&e()||this.createToggtleButtons&&s()}),this.element.addEventListener("slideIn",t=>{let e=+t.detail.targetElement.dataset.index;this.mainNavElement&&this._updateNavItems(e),this.lastIndex=e}),this.createToggtleButtons&&!isTouchDevice()&&(this.element.addEventListener("firstSlideIn",this._updateToggleButtons.bind(this,"hideLeftToggle")),this.element.addEventListener("firstSlideOut",this._updateToggleButtons.bind(this,"showLeftToggle")),this.element.addEventListener("lastSlideIn",this._updateToggleButtons.bind(this,"hideRightToggle")),this.element.addEventListener("lastSlideOut",this._updateToggleButtons.bind(this,"showRightToggle")))):this.mainNavElement.remove()}_createToggleButtons(){let t=getButtonHTML(Button.LEFT)+getButtonHTML(Button.RIGHT);this.element.firstElementChild.insertAdjacentHTML("beforeend",t),this.mainNavElement&&this.mainNavElement.insertAdjacentHTML("afterbegin",t)}_createDataAttrIndex(){for(let t=0;t<this.itemElements.length;t++)this.itemElements[t].dataset.index=t,this.mainNavElement&&(this.navItemElements[t].dataset.index=t)}_createIntersectionObserver({rootElement:t,targetElements:e}){var s=new IntersectionObserver(t=>{t.forEach(t=>{if(t.isIntersecting){let e=new CustomEvent("slideIn",{detail:{targetElement:t.target}});if(this.element.dispatchEvent(e),"0"===t.target.dataset.index){let t=new CustomEvent("firstSlideIn");this.element.dispatchEvent(t)}if(+t.target.dataset.index===this.maxIndex){let t=new CustomEvent("lastSlideIn");this.element.dispatchEvent(t)}}else{if("0"===t.target.dataset.index){let t=new CustomEvent("firstSlideOut");this.element.dispatchEvent(t)}if(+t.target.dataset.index===this.maxIndex){let t=new CustomEvent("lastSlideOut");this.element.dispatchEvent(t)}}})},{root:t,rootMargin:"0px",threshold:.5});e.forEach(t=>{s.observe(t)})}_scrollSlide(t){let e=t-this.lastIndex,s=this.itemElements[0].offsetWidth;this.listElement.scrollLeft+=(s+this.itemsMargin)*e}_updateNavItems(t){this.navItemElements[this.lastIndex].classList.remove(this.navItemActiveClass),this.navItemElements[t].classList.add(this.navItemActiveClass)}_updateToggleButtons(t){let e={};e.showLeftToggle=()=>this.element.classList.remove(this.firstSlideModificator),e.hideLeftToggle=()=>this.element.classList.add(this.firstSlideModificator),e.showRightToggle=()=>this.element.classList.remove(this.lastSlideModificator),e.hideRightToggle=()=>this.element.classList.add(this.lastSlideModificator),e[t]()}}const SLIDER_SELECTOR=".slider";function initSliders(){return Array.from(document.querySelectorAll(".slider")).map(t=>new Slider(t))}export default initSliders;