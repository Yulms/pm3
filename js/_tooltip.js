const tooltipSelector="[data-tooltip]",tooltipCardClassName="tooltip__card",openedTooltipClassName="tooltip--opened",topTooltipClassName="tooltip--top",bottomTooltipClassName="tooltip--bottom",offset=12;class Tooltip{constructor(t){this.element=t,this.element.addEventListener("mouseover",this._onTooltipMouseenter.bind(this)),this.element.addEventListener("mouseout",this._onTooltipMouseleave.bind(this)),this.tooltipCardElem=null}_onTooltipMouseenter(){this._createTooltip(),this._positionTooltip()}_onTooltipMouseleave(){this.tooltipCardElem.remove(),this.tooltipCardElem=null,this.element.classList.remove("tooltip--opened"),this.element.classList.remove("tooltip--top"),this.element.classList.remove("tooltip--bottom")}_createTooltip(){this.tooltipCardElem=document.createElement("div"),this.tooltipCardElem.className="tooltip__card",this.tooltipCardElem.innerHTML=this.element.dataset.tooltip,this.element.append(this.tooltipCardElem),this.element.classList.add("tooltip--opened")}_positionTooltip(){let t=this.tooltipCardElem.getBoundingClientRect();if(t.left<0){let o=-1*Math.floor(t.left);this.tooltipCardElem.style.transform=`translateX(${o}px)`}if(t.right>document.documentElement.clientWidth){let o=Math.ceil(t.right-document.documentElement.clientWidth);this.tooltipCardElem.style.transform=`translateX(${-o}px)`}t.top<0?(this.tooltipCardElem.style.bottom="auto",this.tooltipCardElem.style.top="calc(100% + 12px)",this.element.classList.add("tooltip--bottom")):this.element.classList.add("tooltip--top")}}function initTooltips(){const t=document.querySelectorAll(tooltipSelector);return[].map.call(t,t=>new Tooltip(t))}export default initTooltips;